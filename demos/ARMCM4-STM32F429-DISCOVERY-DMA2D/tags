!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACPPSRC	Makefile	/^ACPPSRC =$/;"	m
ACSRC	Makefile	/^ACSRC =$/;"	m
ADC_USE_MUTUAL_EXCLUSION	halconf.h	176;"	d
ADC_USE_WAIT	halconf.h	168;"	d
AOPT	Makefile	/^AOPT =$/;"	m
AS	Makefile	/^AS   = $(TRGT)gcc -x assembler-with-cpp$/;"	m
ASMSRC	Makefile	/^ASMSRC = $(PORTASM)$/;"	m
BCR_FACCEN_SET	stmdrivers/stm32f4xx_fmc.c	58;"	d	file:
BCR_MBKEN_RESET	stmdrivers/stm32f4xx_fmc.c	57;"	d	file:
BCR_MBKEN_SET	stmdrivers/stm32f4xx_fmc.c	56;"	d	file:
BCTRL	ili9341.h	/^    unsigned  BCTRL             : 1; \/* D[5] *\/$/;"	m	struct:__anon22::ILI9341ParamBits_SET_DISPLAY_CTL
BCTRL	ili9341.h	/^    unsigned  BCTRL             : 1; \/* D[5] *\/$/;"	m	struct:__anon23::ILI9341ParamBits_GET_DISPLAY_CTL
BFA_15_8	ili9341.h	/^    uint8_t   BFA_15_8;         \/* D[39:32] *\/$/;"	m	struct:__anon13::ILI9341ParamBits_SET_VSCROLL
BFA_7_0	ili9341.h	/^    uint8_t   BFA_7_0;          \/* D[47:40] *\/$/;"	m	struct:__anon13::ILI9341ParamBits_SET_VSCROLL
BGR	ili9341.h	/^    unsigned  BGR               : 1; \/* D[3] *\/$/;"	m	struct:__anon15::ILI9341ParamBits_SET_MEM_ACS_CTL
BIN	Makefile	/^BIN  = $(CP) -O binary$/;"	m
BL	ili9341.h	/^    unsigned  BL                : 1; \/* D[2] *\/$/;"	m	struct:__anon22::ILI9341ParamBits_SET_DISPLAY_CTL
BL	ili9341.h	/^    unsigned  BL                : 1; \/* D[2] *\/$/;"	m	struct:__anon23::ILI9341ParamBits_GET_DISPLAY_CTL
C	ili9341.h	/^    unsigned  C                 : 2; \/* D[1:0] *\/$/;"	m	struct:__anon24::ILI9341ParamBits_SET_CABC
C	ili9341.h	/^    unsigned  C                 : 2; \/* D[1:0] *\/$/;"	m	struct:__anon25::ILI9341ParamBits_GET_CABC
CAN_USE_SLEEP_MODE	halconf.h	187;"	d
CC	Makefile	/^CC   = $(TRGT)gcc$/;"	m
CHIBIOS	Makefile	/^CHIBIOS = ..\/..$/;"	m
CH_DBG_ENABLE_ASSERTS	chconf.h	383;"	d
CH_DBG_ENABLE_CHECKS	chconf.h	371;"	d
CH_DBG_ENABLE_STACK_CHECK	chconf.h	408;"	d
CH_DBG_ENABLE_TRACE	chconf.h	394;"	d
CH_DBG_FILL_THREADS	chconf.h	420;"	d
CH_DBG_SYSTEM_STATE_CHECK	chconf.h	360;"	d
CH_DBG_THREADS_PROFILING	chconf.h	433;"	d
CH_FREQUENCY	chconf.h	44;"	d
CH_MEMCORE_SIZE	chconf.h	74;"	d
CH_NO_IDLE_THREAD	chconf.h	91;"	d
CH_OPTIMIZE_SPEED	chconf.h	112;"	d
CH_TIME_QUANTUM	chconf.h	59;"	d
CH_USE_CONDVARS	chconf.h	198;"	d
CH_USE_CONDVARS_TIMEOUT	chconf.h	210;"	d
CH_USE_DYNAMIC	chconf.h	340;"	d
CH_USE_EVENTS	chconf.h	220;"	d
CH_USE_EVENTS_TIMEOUT	chconf.h	232;"	d
CH_USE_HEAP	chconf.h	302;"	d
CH_USE_MAILBOXES	chconf.h	267;"	d
CH_USE_MALLOC_HEAP	chconf.h	316;"	d
CH_USE_MEMCORE	chconf.h	288;"	d
CH_USE_MEMPOOLS	chconf.h	327;"	d
CH_USE_MESSAGES	chconf.h	243;"	d
CH_USE_MESSAGES_PRIORITY	chconf.h	255;"	d
CH_USE_MUTEXES	chconf.h	186;"	d
CH_USE_QUEUES	chconf.h	277;"	d
CH_USE_REGISTRY	chconf.h	131;"	d
CH_USE_SEMAPHORES	chconf.h	152;"	d
CH_USE_SEMAPHORES_PRIORITY	chconf.h	164;"	d
CH_USE_SEMSW	chconf.h	176;"	d
CH_USE_WAITEXIT	chconf.h	142;"	d
CMB	ili9341.h	/^    uint8_t   CMB;              \/* D[7:0] *\/$/;"	m	struct:__anon26::ILI9341ParamBits_SET_CABC_MIN
CMB	ili9341.h	/^    uint8_t   CMB;              \/* D[7:0] *\/$/;"	m	struct:__anon27::ILI9341ParamBits_GET_CABC_MIN
CP	Makefile	/^CP   = $(TRGT)objcopy$/;"	m
CPPC	Makefile	/^CPPC = $(TRGT)g++$/;"	m
CPPSRC	Makefile	/^CPPSRC =$/;"	m
CPPWARN	Makefile	/^CPPWARN = -Wall -Wextra$/;"	m
CSRC	Makefile	/^CSRC = $(PORTSRC) \\$/;"	m
CWARN	Makefile	/^CWARN = -Wall -Wextra -Wstrict-prototypes$/;"	m
DADEFS	Makefile	/^DADEFS =$/;"	m
DBI	ili9341.h	/^    unsigned  DBI               : 3; \/* D[2:0] *\/$/;"	m	struct:__anon17::ILI9341ParamBits_SET_PIX_FMT
DBI	ili9341.h	/^    unsigned  DBI               : 3; \/* D[2:0] *\/$/;"	m	struct:__anon5::ILI9341ParamBits_GET_PIX_FMT
DBV	ili9341.h	/^    uint8_t   DBV;              \/* D[7:0] *\/$/;"	m	struct:__anon20::ILI9341ParamBits_SET_BRIGHTNESS
DBV	ili9341.h	/^    uint8_t   DBV;              \/* D[7:0] *\/$/;"	m	struct:__anon21::ILI9341ParamBits_GET_BRIGHTNESS
DD	ili9341.h	/^    unsigned  DD                : 1; \/* D[3] *\/$/;"	m	struct:__anon22::ILI9341ParamBits_SET_DISPLAY_CTL
DD	ili9341.h	/^    unsigned  DD                : 1; \/* D[3] *\/$/;"	m	struct:__anon23::ILI9341ParamBits_GET_DISPLAY_CTL
DDEFS	Makefile	/^DDEFS =$/;"	m
DINCDIR	Makefile	/^DINCDIR =$/;"	m
DLIBDIR	Makefile	/^DLIBDIR =$/;"	m
DLIBS	Makefile	/^DLIBS =$/;"	m
DPI	ili9341.h	/^    unsigned  DPI               : 3; \/* D[4:6] *\/$/;"	m	struct:__anon17::ILI9341ParamBits_SET_PIX_FMT
DPI	ili9341.h	/^    unsigned  DPI               : 3; \/* D[6:4] *\/$/;"	m	struct:__anon5::ILI9341ParamBits_GET_PIX_FMT
EC_15_8	ili9341.h	/^    uint8_t   EC_15_8;          \/* D[23:16] *\/$/;"	m	struct:__anon10::ILI9341ParamBits_SET_COL_ADDR
EC_7_0	ili9341.h	/^    uint8_t   EC_7_0;           \/* D[31:24] *\/$/;"	m	struct:__anon10::ILI9341ParamBits_SET_COL_ADDR
EP_15_8	ili9341.h	/^    uint8_t   EP_15_8;          \/* D[23:16] *\/$/;"	m	struct:__anon11::ILI9341ParamBits_SET_PAGE_ADDR
EP_7_0	ili9341.h	/^    uint8_t   EP_7_0;           \/* D[31:24] *\/$/;"	m	struct:__anon11::ILI9341ParamBits_SET_PAGE_ADDR
ER_15_8	ili9341.h	/^    uint8_t   ER_15_8;          \/* D[23:16] *\/$/;"	m	struct:__anon12::ILI9341ParamBits_SET_PARTIAL_AREA
ER_7_0	ili9341.h	/^    uint8_t   ER_7_0;           \/* D[31:24] *\/$/;"	m	struct:__anon12::ILI9341ParamBits_SET_PARTIAL_AREA
FMC_AccessMode	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_AccessMode;             \/*!< Specifies the asynchronous access mode. $/;"	m	struct:__anon28
FMC_AccessMode_A	stmdrivers/stm32f4xx_fmc.h	618;"	d
FMC_AccessMode_B	stmdrivers/stm32f4xx_fmc.h	619;"	d
FMC_AccessMode_C	stmdrivers/stm32f4xx_fmc.h	620;"	d
FMC_AccessMode_D	stmdrivers/stm32f4xx_fmc.h	621;"	d
FMC_AddressHoldTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_AddressHoldTime;        \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon28
FMC_AddressSetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_AddressSetupTime;       \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon28
FMC_AsynchronousWait	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_AsynchronousWait;     \/*!< Enables or disables wait signal during asynchronous transfers,$/;"	m	struct:__anon29
FMC_AsynchronousWait_Disable	stmdrivers/stm32f4xx_fmc.h	460;"	d
FMC_AsynchronousWait_Enable	stmdrivers/stm32f4xx_fmc.h	461;"	d
FMC_AttributeSpaceTimingStruct	stmdrivers/stm32f4xx_fmc.h	/^  FMC_NAND_PCCARDTimingInitTypeDef*  FMC_AttributeSpaceTimingStruct;  \/*!< FMC Attribute Space Timing *\/ $/;"	m	struct:__anon32
FMC_AttributeSpaceTimingStruct	stmdrivers/stm32f4xx_fmc.h	/^  FMC_NAND_PCCARDTimingInitTypeDef*  FMC_AttributeSpaceTimingStruct; \/*!< FMC Attribute Space Timing *\/$/;"	m	struct:__anon31
FMC_AutoRefreshNumber	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_AutoRefreshNumber;      \/*!< Defines the number of consecutive auto refresh command issued$/;"	m	struct:__anon34
FMC_Bank	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_Bank;                   \/*!< Specifies the SDRAM memory bank that will be used.$/;"	m	struct:__anon35
FMC_Bank	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_Bank;                \/*!< Specifies the NOR\/SRAM memory bank that will be used.$/;"	m	struct:__anon29
FMC_Bank	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_Bank;              \/*!< Specifies the NAND memory bank that will be used.$/;"	m	struct:__anon31
FMC_Bank1_NORSRAM1	stmdrivers/stm32f4xx_fmc.h	350;"	d
FMC_Bank1_NORSRAM2	stmdrivers/stm32f4xx_fmc.h	351;"	d
FMC_Bank1_NORSRAM3	stmdrivers/stm32f4xx_fmc.h	352;"	d
FMC_Bank1_NORSRAM4	stmdrivers/stm32f4xx_fmc.h	353;"	d
FMC_Bank1_SDRAM	stmdrivers/stm32f4xx_fmc.h	386;"	d
FMC_Bank2_NAND	stmdrivers/stm32f4xx_fmc.h	366;"	d
FMC_Bank2_SDRAM	stmdrivers/stm32f4xx_fmc.h	387;"	d
FMC_Bank3_NAND	stmdrivers/stm32f4xx_fmc.h	367;"	d
FMC_Bank4_PCCARD	stmdrivers/stm32f4xx_fmc.h	378;"	d
FMC_BurstAccessMode	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_BurstAccessMode;     \/*!< Enables or disables the burst access mode for Flash memory,$/;"	m	struct:__anon29
FMC_BurstAccessMode_Disable	stmdrivers/stm32f4xx_fmc.h	448;"	d
FMC_BurstAccessMode_Enable	stmdrivers/stm32f4xx_fmc.h	449;"	d
FMC_BusTurnAroundDuration	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_BusTurnAroundDuration;  \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon28
FMC_CASLatency	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_CASLatency;             \/*!< Defines the SDRAM CAS latency in number of memory clock cycles.$/;"	m	struct:__anon35
FMC_CAS_Latency_1	stmdrivers/stm32f4xx_fmc.h	816;"	d
FMC_CAS_Latency_2	stmdrivers/stm32f4xx_fmc.h	817;"	d
FMC_CAS_Latency_3	stmdrivers/stm32f4xx_fmc.h	818;"	d
FMC_CClock_SyncAsync	stmdrivers/stm32f4xx_fmc.h	559;"	d
FMC_CClock_SyncOnly	stmdrivers/stm32f4xx_fmc.h	558;"	d
FMC_CLKDivision	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_CLKDivision;            \/*!< Defines the period of CLK clock output signal, expressed in number of HCLK cycles.$/;"	m	struct:__anon28
FMC_ClearFlag	stmdrivers/stm32f4xx_fmc.c	/^void FMC_ClearFlag(uint32_t FMC_Bank, uint32_t FMC_FLAG)$/;"	f
FMC_ClearITPendingBit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_ClearITPendingBit(uint32_t FMC_Bank, uint32_t FMC_IT)$/;"	f
FMC_ColumnBitsNumber	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_ColumnBitsNumber;       \/*!< Defines the number of bits of column address.$/;"	m	struct:__anon35
FMC_ColumnBits_Number_10b	stmdrivers/stm32f4xx_fmc.h	757;"	d
FMC_ColumnBits_Number_11b	stmdrivers/stm32f4xx_fmc.h	758;"	d
FMC_ColumnBits_Number_8b	stmdrivers/stm32f4xx_fmc.h	755;"	d
FMC_ColumnBits_Number_9b	stmdrivers/stm32f4xx_fmc.h	756;"	d
FMC_CommandMode	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_CommandMode;            \/*!< Defines the command issued to the SDRAM device.$/;"	m	struct:__anon34
FMC_CommandTarget	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_CommandTarget;          \/*!< Defines which bank (1 or 2) the command will be issued to.$/;"	m	struct:__anon34
FMC_Command_Mode_AutoRefresh	stmdrivers/stm32f4xx_fmc.h	948;"	d
FMC_Command_Mode_CLK_Enabled	stmdrivers/stm32f4xx_fmc.h	946;"	d
FMC_Command_Mode_LoadMode	stmdrivers/stm32f4xx_fmc.h	949;"	d
FMC_Command_Mode_PALL	stmdrivers/stm32f4xx_fmc.h	947;"	d
FMC_Command_Mode_PowerDown	stmdrivers/stm32f4xx_fmc.h	951;"	d
FMC_Command_Mode_Selfrefresh	stmdrivers/stm32f4xx_fmc.h	950;"	d
FMC_Command_Mode_normal	stmdrivers/stm32f4xx_fmc.h	945;"	d
FMC_Command_Target_bank1	stmdrivers/stm32f4xx_fmc.h	969;"	d
FMC_Command_Target_bank1_2	stmdrivers/stm32f4xx_fmc.h	970;"	d
FMC_Command_Target_bank2	stmdrivers/stm32f4xx_fmc.h	968;"	d
FMC_CommonSpaceTimingStruct	stmdrivers/stm32f4xx_fmc.h	/^  FMC_NAND_PCCARDTimingInitTypeDef*  FMC_CommonSpaceTimingStruct;   \/*!< FMC Common Space Timing *\/ $/;"	m	struct:__anon31
FMC_CommonSpaceTimingStruct	stmdrivers/stm32f4xx_fmc.h	/^  FMC_NAND_PCCARDTimingInitTypeDef*  FMC_CommonSpaceTimingStruct; \/*!< FMC Common Space Timing *\/$/;"	m	struct:__anon32
FMC_ContinousClock	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_ContinousClock;       \/*!< Enables or disables the FMC clock output to external memory devices.$/;"	m	struct:__anon29
FMC_DataAddressMux	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_DataAddressMux;      \/*!< Specifies whether the address and data values are$/;"	m	struct:__anon29
FMC_DataAddressMux_Disable	stmdrivers/stm32f4xx_fmc.h	405;"	d
FMC_DataAddressMux_Enable	stmdrivers/stm32f4xx_fmc.h	406;"	d
FMC_DataLatency	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_DataLatency;            \/*!< Defines the number of memory clock cycles to issue$/;"	m	struct:__anon28
FMC_DataSetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_DataSetupTime;          \/*!< Defines the number of HCLK cycles to configure$/;"	m	struct:__anon28
FMC_ECC	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_ECC;              \/*!< Enables or disables the ECC computation.$/;"	m	struct:__anon31
FMC_ECCPageSize	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_ECCPageSize;      \/*!< Defines the page size for the extended ECC.$/;"	m	struct:__anon31
FMC_ECCPageSize_1024Bytes	stmdrivers/stm32f4xx_fmc.h	680;"	d
FMC_ECCPageSize_2048Bytes	stmdrivers/stm32f4xx_fmc.h	681;"	d
FMC_ECCPageSize_256Bytes	stmdrivers/stm32f4xx_fmc.h	678;"	d
FMC_ECCPageSize_4096Bytes	stmdrivers/stm32f4xx_fmc.h	682;"	d
FMC_ECCPageSize_512Bytes	stmdrivers/stm32f4xx_fmc.h	679;"	d
FMC_ECCPageSize_8192Bytes	stmdrivers/stm32f4xx_fmc.h	683;"	d
FMC_ECC_Disable	stmdrivers/stm32f4xx_fmc.h	666;"	d
FMC_ECC_Enable	stmdrivers/stm32f4xx_fmc.h	667;"	d
FMC_ExitSelfRefreshDelay	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_ExitSelfRefreshDelay;   \/*!< Defines the delay from releasing the self refresh command to $/;"	m	struct:__anon33
FMC_ExtendedMode	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_ExtendedMode;        \/*!< Enables or disables the extended mode.$/;"	m	struct:__anon29
FMC_ExtendedMode_Disable	stmdrivers/stm32f4xx_fmc.h	532;"	d
FMC_ExtendedMode_Enable	stmdrivers/stm32f4xx_fmc.h	533;"	d
FMC_FLAG_Busy	stmdrivers/stm32f4xx_fmc.h	1050;"	d
FMC_FLAG_FEMPT	stmdrivers/stm32f4xx_fmc.h	1048;"	d
FMC_FLAG_FallingEdge	stmdrivers/stm32f4xx_fmc.h	1047;"	d
FMC_FLAG_Level	stmdrivers/stm32f4xx_fmc.h	1046;"	d
FMC_FLAG_Refresh	stmdrivers/stm32f4xx_fmc.h	1049;"	d
FMC_FLAG_RisingEdge	stmdrivers/stm32f4xx_fmc.h	1045;"	d
FMC_GetECC	stmdrivers/stm32f4xx_fmc.c	/^uint32_t FMC_GetECC(uint32_t FMC_Bank)$/;"	f
FMC_GetFlagStatus	stmdrivers/stm32f4xx_fmc.c	/^FlagStatus FMC_GetFlagStatus(uint32_t FMC_Bank, uint32_t FMC_FLAG)$/;"	f
FMC_GetITStatus	stmdrivers/stm32f4xx_fmc.c	/^ITStatus FMC_GetITStatus(uint32_t FMC_Bank, uint32_t FMC_IT)$/;"	f
FMC_GetModeStatus	stmdrivers/stm32f4xx_fmc.c	/^uint32_t FMC_GetModeStatus(uint32_t SDRAM_Bank)$/;"	f
FMC_HiZSetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_HiZSetupTime;   \/*!< Defines the number of HCLK clock cycles during which the$/;"	m	struct:__anon30
FMC_HoldSetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_HoldSetupTime;  \/*!< Defines the number of HCLK clock cycles to hold address$/;"	m	struct:__anon30
FMC_IOSpaceTimingStruct	stmdrivers/stm32f4xx_fmc.h	/^  FMC_NAND_PCCARDTimingInitTypeDef*  FMC_IOSpaceTimingStruct; \/*!< FMC IO Space Timing *\/  $/;"	m	struct:__anon32
FMC_ITConfig	stmdrivers/stm32f4xx_fmc.c	/^void FMC_ITConfig(uint32_t FMC_Bank, uint32_t FMC_IT, FunctionalState NewState)$/;"	f
FMC_IT_FallingEdge	stmdrivers/stm32f4xx_fmc.h	1024;"	d
FMC_IT_Level	stmdrivers/stm32f4xx_fmc.h	1023;"	d
FMC_IT_Refresh	stmdrivers/stm32f4xx_fmc.h	1025;"	d
FMC_IT_RisingEdge	stmdrivers/stm32f4xx_fmc.h	1022;"	d
FMC_InternalBankNumber	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_InternalBankNumber;     \/*!< Defines the number of bits of column address.$/;"	m	struct:__anon35
FMC_InternalBank_Number_2	stmdrivers/stm32f4xx_fmc.h	802;"	d
FMC_InternalBank_Number_4	stmdrivers/stm32f4xx_fmc.h	803;"	d
FMC_LoadToActiveDelay	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_LoadToActiveDelay;      \/*!< Defines the delay between a Load Mode Register command and $/;"	m	struct:__anon33
FMC_MemoryDataWidth	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_MemoryDataWidth;     \/*!< Specifies the external memory device width.$/;"	m	struct:__anon29
FMC_MemoryDataWidth	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_MemoryDataWidth;  \/*!< Specifies the external memory device width.$/;"	m	struct:__anon31
FMC_MemoryType	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_MemoryType;          \/*!< Specifies the type of external memory attached to$/;"	m	struct:__anon29
FMC_MemoryType_NOR	stmdrivers/stm32f4xx_fmc.h	420;"	d
FMC_MemoryType_PSRAM	stmdrivers/stm32f4xx_fmc.h	419;"	d
FMC_MemoryType_SRAM	stmdrivers/stm32f4xx_fmc.h	418;"	d
FMC_ModeRegisterDefinition	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_ModeRegisterDefinition; \/*!< Defines the SDRAM Mode register content *\/$/;"	m	struct:__anon34
FMC_NANDCmd	stmdrivers/stm32f4xx_fmc.c	/^void FMC_NANDCmd(uint32_t FMC_Bank, FunctionalState NewState)$/;"	f
FMC_NANDDeInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_NANDDeInit(uint32_t FMC_Bank)$/;"	f
FMC_NANDECCCmd	stmdrivers/stm32f4xx_fmc.c	/^void FMC_NANDECCCmd(uint32_t FMC_Bank, FunctionalState NewState)$/;"	f
FMC_NANDInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_NANDInit(FMC_NANDInitTypeDef* FMC_NANDInitStruct)$/;"	f
FMC_NANDInitTypeDef	stmdrivers/stm32f4xx_fmc.h	/^}FMC_NANDInitTypeDef;$/;"	t	typeref:struct:__anon31
FMC_NANDStructInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_NANDStructInit(FMC_NANDInitTypeDef* FMC_NANDInitStruct)$/;"	f
FMC_NAND_MemoryDataWidth_16b	stmdrivers/stm32f4xx_fmc.h	655;"	d
FMC_NAND_MemoryDataWidth_8b	stmdrivers/stm32f4xx_fmc.h	654;"	d
FMC_NAND_PCCARDTimingInitTypeDef	stmdrivers/stm32f4xx_fmc.h	/^}FMC_NAND_PCCARDTimingInitTypeDef;$/;"	t	typeref:struct:__anon30
FMC_NORSRAMCmd	stmdrivers/stm32f4xx_fmc.c	/^void FMC_NORSRAMCmd(uint32_t FMC_Bank, FunctionalState NewState)$/;"	f
FMC_NORSRAMDeInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_NORSRAMDeInit(uint32_t FMC_Bank)$/;"	f
FMC_NORSRAMInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_NORSRAMInit(FMC_NORSRAMInitTypeDef* FMC_NORSRAMInitStruct)$/;"	f
FMC_NORSRAMInitTypeDef	stmdrivers/stm32f4xx_fmc.h	/^}FMC_NORSRAMInitTypeDef;$/;"	t	typeref:struct:__anon29
FMC_NORSRAMStructInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_NORSRAMStructInit(FMC_NORSRAMInitTypeDef* FMC_NORSRAMInitStruct)$/;"	f
FMC_NORSRAMTimingInitTypeDef	stmdrivers/stm32f4xx_fmc.h	/^}FMC_NORSRAMTimingInitTypeDef;$/;"	t	typeref:struct:__anon28
FMC_NORSRAM_MemoryDataWidth_16b	stmdrivers/stm32f4xx_fmc.h	434;"	d
FMC_NORSRAM_MemoryDataWidth_32b	stmdrivers/stm32f4xx_fmc.h	435;"	d
FMC_NORSRAM_MemoryDataWidth_8b	stmdrivers/stm32f4xx_fmc.h	433;"	d
FMC_NormalMode_Status	stmdrivers/stm32f4xx_fmc.h	1002;"	d
FMC_PCCARDCmd	stmdrivers/stm32f4xx_fmc.c	/^void FMC_PCCARDCmd(FunctionalState NewState)$/;"	f
FMC_PCCARDDeInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_PCCARDDeInit(void)$/;"	f
FMC_PCCARDInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_PCCARDInit(FMC_PCCARDInitTypeDef* FMC_PCCARDInitStruct)$/;"	f
FMC_PCCARDInitTypeDef	stmdrivers/stm32f4xx_fmc.h	/^}FMC_PCCARDInitTypeDef;$/;"	t	typeref:struct:__anon32
FMC_PCCARDStructInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_PCCARDStructInit(FMC_PCCARDInitTypeDef* FMC_PCCARDInitStruct)$/;"	f
FMC_PowerDownMode_Status	stmdrivers/stm32f4xx_fmc.h	1004;"	d
FMC_RCDDelay	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_RCDDelay;               \/*!< Defines the delay between the Activate Command and a Read\/Write command$/;"	m	struct:__anon33
FMC_RPDelay	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_RPDelay;                \/*!< Defines the delay between a Precharge Command and an other command $/;"	m	struct:__anon33
FMC_ReadBurst	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_ReadBurst;              \/*!< This bit enable the SDRAM controller to anticipate the next read commands $/;"	m	struct:__anon35
FMC_ReadPipeDelay	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_ReadPipeDelay;          \/*!< Define the delay in system clock cycles on read data path.$/;"	m	struct:__anon35
FMC_ReadPipe_Delay_0	stmdrivers/stm32f4xx_fmc.h	873;"	d
FMC_ReadPipe_Delay_1	stmdrivers/stm32f4xx_fmc.h	874;"	d
FMC_ReadPipe_Delay_2	stmdrivers/stm32f4xx_fmc.h	875;"	d
FMC_ReadWriteTimingStruct	stmdrivers/stm32f4xx_fmc.h	/^  FMC_NORSRAMTimingInitTypeDef* FMC_ReadWriteTimingStruct; \/*!< Timing Parameters for write and read access if the  Extended Mode is not used*\/  $/;"	m	struct:__anon29
FMC_Read_Burst_Disable	stmdrivers/stm32f4xx_fmc.h	860;"	d
FMC_Read_Burst_Enable	stmdrivers/stm32f4xx_fmc.h	861;"	d
FMC_RowBitsNumber	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_RowBitsNumber;          \/*!< Defines the number of bits of column address..$/;"	m	struct:__anon35
FMC_RowBits_Number_11b	stmdrivers/stm32f4xx_fmc.h	772;"	d
FMC_RowBits_Number_12b	stmdrivers/stm32f4xx_fmc.h	773;"	d
FMC_RowBits_Number_13b	stmdrivers/stm32f4xx_fmc.h	774;"	d
FMC_RowCycleDelay	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_RowCycleDelay;          \/*!< Defines the delay between the Refresh command and the Activate command$/;"	m	struct:__anon33
FMC_SDClockPeriod	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_SDClockPeriod;          \/*!< Define the SDRAM Clock Period for both SDRAM Banks and they allow to disable$/;"	m	struct:__anon35
FMC_SDClock_Disable	stmdrivers/stm32f4xx_fmc.h	845;"	d
FMC_SDClock_Period_2	stmdrivers/stm32f4xx_fmc.h	846;"	d
FMC_SDClock_Period_3	stmdrivers/stm32f4xx_fmc.h	847;"	d
FMC_SDMemoryDataWidth	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_SDMemoryDataWidth;        \/*!< Defines the memory device width.$/;"	m	struct:__anon35
FMC_SDMemory_Width_16b	stmdrivers/stm32f4xx_fmc.h	788;"	d
FMC_SDMemory_Width_32b	stmdrivers/stm32f4xx_fmc.h	789;"	d
FMC_SDMemory_Width_8b	stmdrivers/stm32f4xx_fmc.h	787;"	d
FMC_SDRAMCmdConfig	stmdrivers/stm32f4xx_fmc.c	/^void FMC_SDRAMCmdConfig(FMC_SDRAMCommandTypeDef* FMC_SDRAMCommandStruct)$/;"	f
FMC_SDRAMCommandTypeDef	stmdrivers/stm32f4xx_fmc.h	/^}FMC_SDRAMCommandTypeDef;$/;"	t	typeref:struct:__anon34
FMC_SDRAMDeInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_SDRAMDeInit(uint32_t FMC_Bank)$/;"	f
FMC_SDRAMInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_SDRAMInit(FMC_SDRAMInitTypeDef* FMC_SDRAMInitStruct)$/;"	f
FMC_SDRAMInitTypeDef	stmdrivers/stm32f4xx_fmc.h	/^}FMC_SDRAMInitTypeDef;$/;"	t	typeref:struct:__anon35
FMC_SDRAMStructInit	stmdrivers/stm32f4xx_fmc.c	/^void FMC_SDRAMStructInit(FMC_SDRAMInitTypeDef* FMC_SDRAMInitStruct)  $/;"	f
FMC_SDRAMTimingInitTypeDef	stmdrivers/stm32f4xx_fmc.h	/^}FMC_SDRAMTimingInitTypeDef;$/;"	t	typeref:struct:__anon33
FMC_SDRAMTimingStruct	stmdrivers/stm32f4xx_fmc.h	/^  FMC_SDRAMTimingInitTypeDef* FMC_SDRAMTimingStruct;   \/*!< Timing Parameters for write and read access*\/                                            $/;"	m	struct:__anon35
FMC_SDRAMWriteProtectionConfig	stmdrivers/stm32f4xx_fmc.c	/^void FMC_SDRAMWriteProtectionConfig(uint32_t SDRAM_Bank, FunctionalState NewState)$/;"	f
FMC_SelfRefreshMode_Status	stmdrivers/stm32f4xx_fmc.h	1003;"	d
FMC_SelfRefreshTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_SelfRefreshTime;        \/*!< Defines the minimum Self Refresh period in number of memory clock $/;"	m	struct:__anon33
FMC_SetAutoRefresh_Number	stmdrivers/stm32f4xx_fmc.c	/^void FMC_SetAutoRefresh_Number(uint32_t FMC_Number)$/;"	f
FMC_SetRefreshCount	stmdrivers/stm32f4xx_fmc.c	/^void FMC_SetRefreshCount(uint32_t FMC_Count)$/;"	f
FMC_SetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_SetupTime;      \/*!< Defines the number of HCLK cycles to setup address before$/;"	m	struct:__anon30
FMC_TARSetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_TARSetupTime;     \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon31
FMC_TARSetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_TARSetupTime;   \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon32
FMC_TCLRSetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_TCLRSetupTime;    \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon31
FMC_TCLRSetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_TCLRSetupTime;  \/*!< Defines the number of HCLK cycles to configure the$/;"	m	struct:__anon32
FMC_WaitSetupTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_WaitSetupTime;  \/*!< Defines the minimum number of HCLK cycles to assert the$/;"	m	struct:__anon30
FMC_WaitSignal	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_WaitSignal;          \/*!< Enables or disables the wait state insertion via wait$/;"	m	struct:__anon29
FMC_WaitSignalActive	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_WaitSignalActive;    \/*!< Specifies if the wait signal is asserted by the memory one$/;"	m	struct:__anon29
FMC_WaitSignalActive_BeforeWaitState	stmdrivers/stm32f4xx_fmc.h	496;"	d
FMC_WaitSignalActive_DuringWaitState	stmdrivers/stm32f4xx_fmc.h	497;"	d
FMC_WaitSignalPolarity	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_WaitSignalPolarity;  \/*!< Specifies the wait signal polarity, valid only when accessing$/;"	m	struct:__anon29
FMC_WaitSignalPolarity_High	stmdrivers/stm32f4xx_fmc.h	473;"	d
FMC_WaitSignalPolarity_Low	stmdrivers/stm32f4xx_fmc.h	472;"	d
FMC_WaitSignal_Disable	stmdrivers/stm32f4xx_fmc.h	520;"	d
FMC_WaitSignal_Enable	stmdrivers/stm32f4xx_fmc.h	521;"	d
FMC_Waitfeature	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_Waitfeature;      \/*!< Enables or disables the Wait feature for the NAND Memory Bank.$/;"	m	struct:__anon31
FMC_Waitfeature	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_Waitfeature;    \/*!< Enables or disables the Wait feature for the Memory Bank.$/;"	m	struct:__anon32
FMC_Waitfeature_Disable	stmdrivers/stm32f4xx_fmc.h	642;"	d
FMC_Waitfeature_Enable	stmdrivers/stm32f4xx_fmc.h	643;"	d
FMC_WrapMode	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_WrapMode;            \/*!< Enables or disables the Wrapped burst access mode for Flash$/;"	m	struct:__anon29
FMC_WrapMode_Disable	stmdrivers/stm32f4xx_fmc.h	484;"	d
FMC_WrapMode_Enable	stmdrivers/stm32f4xx_fmc.h	485;"	d
FMC_WriteBurst	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_WriteBurst;          \/*!< Enables or disables the write burst operation.$/;"	m	struct:__anon29
FMC_WriteBurst_Disable	stmdrivers/stm32f4xx_fmc.h	545;"	d
FMC_WriteBurst_Enable	stmdrivers/stm32f4xx_fmc.h	546;"	d
FMC_WriteOperation	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_WriteOperation;      \/*!< Enables or disables the write operation in the selected bank by the FMC. $/;"	m	struct:__anon29
FMC_WriteOperation_Disable	stmdrivers/stm32f4xx_fmc.h	508;"	d
FMC_WriteOperation_Enable	stmdrivers/stm32f4xx_fmc.h	509;"	d
FMC_WriteProtection	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_WriteProtection;        \/*!< Enables the SDRAM bank to be accessed in write mode.$/;"	m	struct:__anon35
FMC_WriteRecoveryTime	stmdrivers/stm32f4xx_fmc.h	/^  uint32_t FMC_WriteRecoveryTime;      \/*!< Defines the Write recovery Time in number of memory clock cycles.$/;"	m	struct:__anon33
FMC_WriteTimingStruct	stmdrivers/stm32f4xx_fmc.h	/^  FMC_NORSRAMTimingInitTypeDef* FMC_WriteTimingStruct;     \/*!< Timing Parameters for write access if the  Extended Mode is used*\/      $/;"	m	struct:__anon29
FMC_Write_Protection_Disable	stmdrivers/stm32f4xx_fmc.h	831;"	d
FMC_Write_Protection_Enable	stmdrivers/stm32f4xx_fmc.h	832;"	d
GTS_7_0	ili9341.h	/^    uint8_t   GTS_7_0;          \/* D[15: 8] *\/$/;"	m	struct:__anon19::ILI9341ParamBits_GET_TEAR_SCANLINE
GTS_9_8	ili9341.h	/^    uint8_t   GTS_9_8;          \/* D[ 7: 0] *\/$/;"	m	struct:__anon19::ILI9341ParamBits_GET_TEAR_SCANLINE
HAL_USE_ADC	halconf.h	51;"	d
HAL_USE_CAN	halconf.h	58;"	d
HAL_USE_EXT	halconf.h	65;"	d
HAL_USE_GPT	halconf.h	72;"	d
HAL_USE_I2C	halconf.h	79;"	d
HAL_USE_ICU	halconf.h	86;"	d
HAL_USE_MAC	halconf.h	93;"	d
HAL_USE_MMC_SPI	halconf.h	100;"	d
HAL_USE_PAL	halconf.h	44;"	d
HAL_USE_PWM	halconf.h	107;"	d
HAL_USE_RTC	halconf.h	114;"	d
HAL_USE_SDC	halconf.h	121;"	d
HAL_USE_SERIAL	halconf.h	128;"	d
HAL_USE_SERIAL_USB	halconf.h	135;"	d
HAL_USE_SPI	halconf.h	142;"	d
HAL_USE_TM	halconf.h	37;"	d
HAL_USE_UART	halconf.h	149;"	d
HAL_USE_USB	halconf.h	156;"	d
HEX	Makefile	/^HEX  = $(CP) -O ihex$/;"	m
I2C_USE_MUTUAL_EXCLUSION	halconf.h	198;"	d
ID1	ili9341.h	/^    uint8_t ID1;$/;"	m	struct:__anon1::ILI9341ParamBits_GET_ID_INFO
ID2	ili9341.h	/^    uint8_t ID2;$/;"	m	struct:__anon1::ILI9341ParamBits_GET_ID_INFO
ID3	ili9341.h	/^    uint8_t ID3;$/;"	m	struct:__anon1::ILI9341ParamBits_GET_ID_INFO
IDLE_LOOP_HOOK	chconf.h	496;"	d
ILI9341Config	ili9341.h	/^typedef struct ILI9341Config ILI9341Config;$/;"	t	typeref:struct:ILI9341Config
ILI9341Config	ili9341.h	/^typedef struct ILI9341Config {$/;"	s
ILI9341Config	ili9341.h	/^} ILI9341Config;$/;"	t	typeref:struct:ILI9341Config
ILI9341D1	ili9341.c	/^ILI9341Driver ILI9341D1;$/;"	v
ILI9341Driver	ili9341.h	/^typedef struct ILI9341Driver ILI9341Driver;$/;"	t	typeref:struct:ILI9341Driver
ILI9341Driver	ili9341.h	/^typedef struct ILI9341Driver {$/;"	s
ILI9341Driver	ili9341.h	/^} ILI9341Driver;$/;"	t	typeref:struct:ILI9341Driver
ILI9341ParamBits_CMD_TEARING_ON	ili9341.h	/^  struct ILI9341ParamBits_CMD_TEARING_ON {$/;"	s	union:__anon14
ILI9341ParamBits_GET_BRIGHTNESS	ili9341.h	/^  struct ILI9341ParamBits_GET_BRIGHTNESS {$/;"	s	union:__anon21
ILI9341ParamBits_GET_CABC	ili9341.h	/^  struct ILI9341ParamBits_GET_CABC {$/;"	s	union:__anon25
ILI9341ParamBits_GET_CABC_MIN	ili9341.h	/^  struct ILI9341ParamBits_GET_CABC_MIN {$/;"	s	union:__anon27
ILI9341ParamBits_GET_DISPLAY_CTL	ili9341.h	/^  struct ILI9341ParamBits_GET_DISPLAY_CTL {$/;"	s	union:__anon23
ILI9341ParamBits_GET_ID_INFO	ili9341.h	/^  struct ILI9341ParamBits_GET_ID_INFO {$/;"	s	union:__anon1
ILI9341ParamBits_GET_IMG_FMT	ili9341.h	/^  struct ILI9341ParamBits_GET_IMG_FMT {$/;"	s	union:__anon6
ILI9341ParamBits_GET_MADCTL	ili9341.h	/^  struct ILI9341ParamBits_GET_MADCTL {$/;"	s	union:__anon4
ILI9341ParamBits_GET_PIX_FMT	ili9341.h	/^  struct ILI9341ParamBits_GET_PIX_FMT {$/;"	s	union:__anon5
ILI9341ParamBits_GET_PWR_MODE	ili9341.h	/^  struct ILI9341ParamBits_GET_PWR_MODE {$/;"	s	union:__anon3
ILI9341ParamBits_GET_SELF_DIAG	ili9341.h	/^  struct ILI9341ParamBits_GET_SELF_DIAG {$/;"	s	union:__anon8
ILI9341ParamBits_GET_SIG_MODE	ili9341.h	/^  struct ILI9341ParamBits_GET_SIG_MODE {$/;"	s	union:__anon7
ILI9341ParamBits_GET_STATUS	ili9341.h	/^  struct ILI9341ParamBits_GET_STATUS {$/;"	s	union:__anon2
ILI9341ParamBits_GET_TEAR_SCANLINE	ili9341.h	/^  struct ILI9341ParamBits_GET_TEAR_SCANLINE {$/;"	s	union:__anon19
ILI9341ParamBits_SET_BRIGHTNESS	ili9341.h	/^  struct ILI9341ParamBits_SET_BRIGHTNESS {$/;"	s	union:__anon20
ILI9341ParamBits_SET_CABC	ili9341.h	/^  struct ILI9341ParamBits_SET_CABC {$/;"	s	union:__anon24
ILI9341ParamBits_SET_CABC_MIN	ili9341.h	/^  struct ILI9341ParamBits_SET_CABC_MIN {$/;"	s	union:__anon26
ILI9341ParamBits_SET_COL_ADDR	ili9341.h	/^  struct ILI9341ParamBits_SET_COL_ADDR {$/;"	s	union:__anon10
ILI9341ParamBits_SET_DISPLAY_CTL	ili9341.h	/^  struct ILI9341ParamBits_SET_DISPLAY_CTL {$/;"	s	union:__anon22
ILI9341ParamBits_SET_GAMMA	ili9341.h	/^  struct ILI9341ParamBits_SET_GAMMA {$/;"	s	union:__anon9
ILI9341ParamBits_SET_MEM_ACS_CTL	ili9341.h	/^  struct ILI9341ParamBits_SET_MEM_ACS_CTL {$/;"	s	union:__anon15
ILI9341ParamBits_SET_PAGE_ADDR	ili9341.h	/^  struct ILI9341ParamBits_SET_PAGE_ADDR {$/;"	s	union:__anon11
ILI9341ParamBits_SET_PARTIAL_AREA	ili9341.h	/^  struct ILI9341ParamBits_SET_PARTIAL_AREA {$/;"	s	union:__anon12
ILI9341ParamBits_SET_PIX_FMT	ili9341.h	/^  struct ILI9341ParamBits_SET_PIX_FMT {$/;"	s	union:__anon17
ILI9341ParamBits_SET_TEAR_SCANLINE	ili9341.h	/^  struct ILI9341ParamBits_SET_TEAR_SCANLINE {$/;"	s	union:__anon18
ILI9341ParamBits_SET_VSCROLL	ili9341.h	/^  struct ILI9341ParamBits_SET_VSCROLL {$/;"	s	union:__anon13
ILI9341ParamBits_SET_VSCROLL_ADDR	ili9341.h	/^  struct ILI9341ParamBits_SET_VSCROLL_ADDR {$/;"	s	union:__anon16
ILI9341Params_CMD_TEARING_ON	ili9341.h	/^} ILI9341Params_CMD_TEARING_ON;$/;"	t	typeref:union:__anon14
ILI9341Params_GET_BRIGHTNESS	ili9341.h	/^} ILI9341Params_GET_BRIGHTNESS;$/;"	t	typeref:union:__anon21
ILI9341Params_GET_CABC	ili9341.h	/^} ILI9341Params_GET_CABC;$/;"	t	typeref:union:__anon25
ILI9341Params_GET_CABC_MIN	ili9341.h	/^} ILI9341Params_GET_CABC_MIN;$/;"	t	typeref:union:__anon27
ILI9341Params_GET_DISPLAY_CTL	ili9341.h	/^} ILI9341Params_GET_DISPLAY_CTL;$/;"	t	typeref:union:__anon23
ILI9341Params_GET_ID_INFO	ili9341.h	/^} ILI9341Params_GET_ID_INFO;$/;"	t	typeref:union:__anon1
ILI9341Params_GET_IMG_FMT	ili9341.h	/^} ILI9341Params_GET_IMG_FMT;$/;"	t	typeref:union:__anon6
ILI9341Params_GET_MADCTL	ili9341.h	/^} ILI9341Params_GET_MADCTL;$/;"	t	typeref:union:__anon4
ILI9341Params_GET_PIX_FMT	ili9341.h	/^} ILI9341Params_GET_PIX_FMT;$/;"	t	typeref:union:__anon5
ILI9341Params_GET_PWR_MODE	ili9341.h	/^} ILI9341Params_GET_PWR_MODE;$/;"	t	typeref:union:__anon3
ILI9341Params_GET_SELF_DIAG	ili9341.h	/^} ILI9341Params_GET_SELF_DIAG;$/;"	t	typeref:union:__anon8
ILI9341Params_GET_SIG_MODE	ili9341.h	/^} ILI9341Params_GET_SIG_MODE;$/;"	t	typeref:union:__anon7
ILI9341Params_GET_STATUS	ili9341.h	/^} ILI9341Params_GET_STATUS;$/;"	t	typeref:union:__anon2
ILI9341Params_GET_TEAR_SCANLINE	ili9341.h	/^} ILI9341Params_GET_TEAR_SCANLINE;$/;"	t	typeref:union:__anon19
ILI9341Params_SET_BRIGHTNESS	ili9341.h	/^} ILI9341Params_SET_BRIGHTNESS;$/;"	t	typeref:union:__anon20
ILI9341Params_SET_CABC	ili9341.h	/^} ILI9341Params_SET_CABC;$/;"	t	typeref:union:__anon24
ILI9341Params_SET_CABC_MIN	ili9341.h	/^} ILI9341Params_SET_CABC_MIN;$/;"	t	typeref:union:__anon26
ILI9341Params_SET_COL_ADDR	ili9341.h	/^} ILI9341Params_SET_COL_ADDR;$/;"	t	typeref:union:__anon10
ILI9341Params_SET_DISPLAY_CTL	ili9341.h	/^} ILI9341Params_SET_DISPLAY_CTL;$/;"	t	typeref:union:__anon22
ILI9341Params_SET_GAMMA	ili9341.h	/^} ILI9341Params_SET_GAMMA;$/;"	t	typeref:union:__anon9
ILI9341Params_SET_MEM_ACS_CTL	ili9341.h	/^} ILI9341Params_SET_MEM_ACS_CTL;$/;"	t	typeref:union:__anon15
ILI9341Params_SET_PAGE_ADDR	ili9341.h	/^} ILI9341Params_SET_PAGE_ADDR;$/;"	t	typeref:union:__anon11
ILI9341Params_SET_PARTIAL_AREA	ili9341.h	/^} ILI9341Params_SET_PARTIAL_AREA;$/;"	t	typeref:union:__anon12
ILI9341Params_SET_PIX_FMT	ili9341.h	/^} ILI9341Params_SET_PIX_FMT;$/;"	t	typeref:union:__anon17
ILI9341Params_SET_TEAR_SCANLINE	ili9341.h	/^} ILI9341Params_SET_TEAR_SCANLINE;$/;"	t	typeref:union:__anon18
ILI9341Params_SET_VSCROLL	ili9341.h	/^} ILI9341Params_SET_VSCROLL;$/;"	t	typeref:union:__anon13
ILI9341Params_SET_VSCROLL_ADDR	ili9341.h	/^} ILI9341Params_SET_VSCROLL_ADDR;$/;"	t	typeref:union:__anon16
ILI9341_ACTIVE	ili9341.h	/^  ILI9341_ACTIVE = 3,                   \/**< Exchanging data.*\/$/;"	e	enum:ili9341state_t
ILI9341_CMD_DISPLAY_OFF	ili9341.h	55;"	d
ILI9341_CMD_DISPLAY_ON	ili9341.h	56;"	d
ILI9341_CMD_IDLE_OFF	ili9341.h	68;"	d
ILI9341_CMD_IDLE_ON	ili9341.h	69;"	d
ILI9341_CMD_INVERT_OFF	ili9341.h	53;"	d
ILI9341_CMD_INVERT_ON	ili9341.h	52;"	d
ILI9341_CMD_NOP	ili9341.h	38;"	d
ILI9341_CMD_PARTIAL_OFF	ili9341.h	51;"	d
ILI9341_CMD_PARTIAL_ON	ili9341.h	50;"	d
ILI9341_CMD_RESET	ili9341.h	39;"	d
ILI9341_CMD_SLEEP_OFF	ili9341.h	49;"	d
ILI9341_CMD_SLEEP_ON	ili9341.h	48;"	d
ILI9341_CMD_TEARING_OFF	ili9341.h	65;"	d
ILI9341_CMD_TEARING_ON	ili9341.h	64;"	d
ILI9341_GET_BRIGHTNESS	ili9341.h	76;"	d
ILI9341_GET_CABC	ili9341.h	80;"	d
ILI9341_GET_CABC_MIN	ili9341.h	82;"	d
ILI9341_GET_DISPLAY_CTL	ili9341.h	78;"	d
ILI9341_GET_ID1	ili9341.h	83;"	d
ILI9341_GET_ID2	ili9341.h	84;"	d
ILI9341_GET_ID3	ili9341.h	85;"	d
ILI9341_GET_ID4	ili9341.h	114;"	d
ILI9341_GET_ID_INFO	ili9341.h	40;"	d
ILI9341_GET_IMG_FMT	ili9341.h	45;"	d
ILI9341_GET_MADCTL	ili9341.h	43;"	d
ILI9341_GET_MEM	ili9341.h	61;"	d
ILI9341_GET_MEM_CONT	ili9341.h	72;"	d
ILI9341_GET_NVMEM_KEY	ili9341.h	112;"	d
ILI9341_GET_NVMEM_STATUS	ili9341.h	113;"	d
ILI9341_GET_PIX_FMT	ili9341.h	44;"	d
ILI9341_GET_PWR_MODE	ili9341.h	42;"	d
ILI9341_GET_SELF_DIAG	ili9341.h	47;"	d
ILI9341_GET_SIG_MODE	ili9341.h	46;"	d
ILI9341_GET_STATUS	ili9341.h	41;"	d
ILI9341_GET_TEAR_SCANLINE	ili9341.h	74;"	d
ILI9341_IM	ili9341.h	153;"	d
ILI9341_IM_3LSI_1	ili9341.h	126;"	d
ILI9341_IM_3LSI_2	ili9341.h	127;"	d
ILI9341_IM_4LSI_1	ili9341.h	128;"	d
ILI9341_IM_4LSI_2	ili9341.h	129;"	d
ILI9341_READY	ili9341.h	/^  ILI9341_READY  = 2,                   \/**< Ready.*\/$/;"	e	enum:ili9341state_t
ILI9341_SET_BLANKING_PORCH_CTL	ili9341.h	97;"	d
ILI9341_SET_BRIGHTNESS	ili9341.h	75;"	d
ILI9341_SET_CABC	ili9341.h	79;"	d
ILI9341_SET_CABC_MIN	ili9341.h	81;"	d
ILI9341_SET_COLOR	ili9341.h	60;"	d
ILI9341_SET_COL_ADDR	ili9341.h	57;"	d
ILI9341_SET_DGAMMA_CTL_1	ili9341.h	117;"	d
ILI9341_SET_DGAMMA_CTL_2	ili9341.h	118;"	d
ILI9341_SET_DISPLAY_CTL	ili9341.h	77;"	d
ILI9341_SET_ENTRY_MODE	ili9341.h	99;"	d
ILI9341_SET_FRAME_CTL_IDLE	ili9341.h	94;"	d
ILI9341_SET_FRAME_CTL_NORMAL	ili9341.h	93;"	d
ILI9341_SET_FRAME_CTL_PARTIAL	ili9341.h	95;"	d
ILI9341_SET_FUNCTION_CTL	ili9341.h	98;"	d
ILI9341_SET_GAMMA	ili9341.h	54;"	d
ILI9341_SET_IF_CTL	ili9341.h	119;"	d
ILI9341_SET_INVERSION_CTL	ili9341.h	96;"	d
ILI9341_SET_LIGHT_CTL_1	ili9341.h	100;"	d
ILI9341_SET_LIGHT_CTL_2	ili9341.h	101;"	d
ILI9341_SET_LIGHT_CTL_3	ili9341.h	102;"	d
ILI9341_SET_LIGHT_CTL_4	ili9341.h	103;"	d
ILI9341_SET_LIGHT_CTL_5	ili9341.h	104;"	d
ILI9341_SET_LIGHT_CTL_7	ili9341.h	105;"	d
ILI9341_SET_LIGHT_CTL_8	ili9341.h	106;"	d
ILI9341_SET_MEM	ili9341.h	59;"	d
ILI9341_SET_MEM_ACS_CTL	ili9341.h	66;"	d
ILI9341_SET_MEM_CONT	ili9341.h	71;"	d
ILI9341_SET_NGAMMA	ili9341.h	116;"	d
ILI9341_SET_NVMEM	ili9341.h	111;"	d
ILI9341_SET_PAGE_ADDR	ili9341.h	58;"	d
ILI9341_SET_PARTIAL_AREA	ili9341.h	62;"	d
ILI9341_SET_PGAMMA	ili9341.h	115;"	d
ILI9341_SET_PIX_FMT	ili9341.h	70;"	d
ILI9341_SET_POWER_CTL_1	ili9341.h	107;"	d
ILI9341_SET_POWER_CTL_2	ili9341.h	108;"	d
ILI9341_SET_RGB_IF_SIG_CTL	ili9341.h	92;"	d
ILI9341_SET_TEAR_SCANLINE	ili9341.h	73;"	d
ILI9341_SET_VCOM_CTL_1	ili9341.h	109;"	d
ILI9341_SET_VCOM_CTL_2	ili9341.h	110;"	d
ILI9341_SET_VSCROLL	ili9341.h	63;"	d
ILI9341_SET_VSCROLL_ADDR	ili9341.h	67;"	d
ILI9341_STOP	ili9341.h	/^  ILI9341_STOP   = 1,                   \/**< Stopped.*\/$/;"	e	enum:ili9341state_t
ILI9341_UNINIT	ili9341.h	/^  ILI9341_UNINIT = 0,                   \/**< Not initialized.*\/$/;"	e	enum:ili9341state_t
ILI9341_USE_CHECKS	ili9341.h	163;"	d
ILI9341_USE_MUTUAL_EXCLUSION	ili9341.h	146;"	d
INCDIR	Makefile	/^INCDIR = $(PORTINC) $(KERNINC) $(TESTINC) \\$/;"	m
IS42S16400J_SIZE	main.c	36;"	d	file:
IS_FMC_ACCESS_MODE	stmdrivers/stm32f4xx_fmc.h	623;"	d
IS_FMC_ADDRESS_HOLD_TIME	stmdrivers/stm32f4xx_fmc.h	578;"	d
IS_FMC_ADDRESS_SETUP_TIME	stmdrivers/stm32f4xx_fmc.h	570;"	d
IS_FMC_ASYNWAIT	stmdrivers/stm32f4xx_fmc.h	463;"	d
IS_FMC_AUTOREFRESH_NUMBER	stmdrivers/stm32f4xx_fmc.h	983;"	d
IS_FMC_BURSTMODE	stmdrivers/stm32f4xx_fmc.h	451;"	d
IS_FMC_CAS_LATENCY	stmdrivers/stm32f4xx_fmc.h	820;"	d
IS_FMC_CLEAR_FLAG	stmdrivers/stm32f4xx_fmc.h	1066;"	d
IS_FMC_CLK_DIV	stmdrivers/stm32f4xx_fmc.h	602;"	d
IS_FMC_COLUMNBITS_NUMBER	stmdrivers/stm32f4xx_fmc.h	760;"	d
IS_FMC_COMMAND_MODE	stmdrivers/stm32f4xx_fmc.h	953;"	d
IS_FMC_COMMAND_TARGET	stmdrivers/stm32f4xx_fmc.h	972;"	d
IS_FMC_CONTINOUS_CLOCK	stmdrivers/stm32f4xx_fmc.h	561;"	d
IS_FMC_DATASETUP_TIME	stmdrivers/stm32f4xx_fmc.h	586;"	d
IS_FMC_DATA_LATENCY	stmdrivers/stm32f4xx_fmc.h	610;"	d
IS_FMC_ECCPAGE_SIZE	stmdrivers/stm32f4xx_fmc.h	685;"	d
IS_FMC_ECC_STATE	stmdrivers/stm32f4xx_fmc.h	669;"	d
IS_FMC_EXITSELFREFRESH_DELAY	stmdrivers/stm32f4xx_fmc.h	896;"	d
IS_FMC_EXTENDED_MODE	stmdrivers/stm32f4xx_fmc.h	535;"	d
IS_FMC_GETFLAG_BANK	stmdrivers/stm32f4xx_fmc.h	1059;"	d
IS_FMC_GET_FLAG	stmdrivers/stm32f4xx_fmc.h	1052;"	d
IS_FMC_GET_IT	stmdrivers/stm32f4xx_fmc.h	1028;"	d
IS_FMC_HIZ_TIME	stmdrivers/stm32f4xx_fmc.h	738;"	d
IS_FMC_HOLD_TIME	stmdrivers/stm32f4xx_fmc.h	730;"	d
IS_FMC_INTERNALBANK_NUMBER	stmdrivers/stm32f4xx_fmc.h	805;"	d
IS_FMC_IT	stmdrivers/stm32f4xx_fmc.h	1027;"	d
IS_FMC_IT_BANK	stmdrivers/stm32f4xx_fmc.h	1033;"	d
IS_FMC_LOADTOACTIVE_DELAY	stmdrivers/stm32f4xx_fmc.h	888;"	d
IS_FMC_MEMORY	stmdrivers/stm32f4xx_fmc.h	422;"	d
IS_FMC_MODE_REGISTER	stmdrivers/stm32f4xx_fmc.h	992;"	d
IS_FMC_MODE_STATUS	stmdrivers/stm32f4xx_fmc.h	1006;"	d
IS_FMC_MUX	stmdrivers/stm32f4xx_fmc.h	408;"	d
IS_FMC_NAND_BANK	stmdrivers/stm32f4xx_fmc.h	369;"	d
IS_FMC_NAND_MEMORY_WIDTH	stmdrivers/stm32f4xx_fmc.h	657;"	d
IS_FMC_NORSRAM_BANK	stmdrivers/stm32f4xx_fmc.h	355;"	d
IS_FMC_NORSRAM_MEMORY_WIDTH	stmdrivers/stm32f4xx_fmc.h	437;"	d
IS_FMC_RCD_DELAY	stmdrivers/stm32f4xx_fmc.h	936;"	d
IS_FMC_READPIPE_DELAY	stmdrivers/stm32f4xx_fmc.h	877;"	d
IS_FMC_READ_BURST	stmdrivers/stm32f4xx_fmc.h	863;"	d
IS_FMC_REFRESH_COUNT	stmdrivers/stm32f4xx_fmc.h	1076;"	d
IS_FMC_ROWBITS_NUMBER	stmdrivers/stm32f4xx_fmc.h	776;"	d
IS_FMC_ROWCYCLE_DELAY	stmdrivers/stm32f4xx_fmc.h	912;"	d
IS_FMC_RP_DELAY	stmdrivers/stm32f4xx_fmc.h	928;"	d
IS_FMC_SDCLOCK_PERIOD	stmdrivers/stm32f4xx_fmc.h	849;"	d
IS_FMC_SDMEMORY_WIDTH	stmdrivers/stm32f4xx_fmc.h	791;"	d
IS_FMC_SDRAM_BANK	stmdrivers/stm32f4xx_fmc.h	389;"	d
IS_FMC_SELFREFRESH_TIME	stmdrivers/stm32f4xx_fmc.h	904;"	d
IS_FMC_SETUP_TIME	stmdrivers/stm32f4xx_fmc.h	714;"	d
IS_FMC_TAR_TIME	stmdrivers/stm32f4xx_fmc.h	706;"	d
IS_FMC_TCLR_TIME	stmdrivers/stm32f4xx_fmc.h	698;"	d
IS_FMC_TURNAROUND_TIME	stmdrivers/stm32f4xx_fmc.h	594;"	d
IS_FMC_WAITE_SIGNAL	stmdrivers/stm32f4xx_fmc.h	523;"	d
IS_FMC_WAIT_FEATURE	stmdrivers/stm32f4xx_fmc.h	645;"	d
IS_FMC_WAIT_POLARITY	stmdrivers/stm32f4xx_fmc.h	475;"	d
IS_FMC_WAIT_SIGNAL_ACTIVE	stmdrivers/stm32f4xx_fmc.h	499;"	d
IS_FMC_WAIT_TIME	stmdrivers/stm32f4xx_fmc.h	722;"	d
IS_FMC_WRAP_MODE	stmdrivers/stm32f4xx_fmc.h	487;"	d
IS_FMC_WRITE_BURST	stmdrivers/stm32f4xx_fmc.h	548;"	d
IS_FMC_WRITE_OPERATION	stmdrivers/stm32f4xx_fmc.h	511;"	d
IS_FMC_WRITE_PROTECTION	stmdrivers/stm32f4xx_fmc.h	834;"	d
IS_FMC_WRITE_RECOVERY_TIME	stmdrivers/stm32f4xx_fmc.h	920;"	d
LD	Makefile	/^LD   = $(TRGT)gcc$/;"	m
LDSCRIPT	Makefile	/^LDSCRIPT = .\/STM32F429xI_segmented.ld$/;"	m
M	ili9341.h	/^    unsigned  M                 : 1; \/* D[0] *\/$/;"	m	struct:__anon14::ILI9341ParamBits_CMD_TEARING_ON
MAC_USE_EVENTS	halconf.h	216;"	d
MAC_USE_ZERO_COPY	halconf.h	209;"	d
MCU	Makefile	/^MCU  = cortex-m4$/;"	m
MH	ili9341.h	/^    unsigned  MH                : 1; \/* D[2] *\/$/;"	m	struct:__anon15::ILI9341ParamBits_SET_MEM_ACS_CTL
ML	ili9341.h	/^    unsigned  ML                : 1; \/* D[4] *\/$/;"	m	struct:__anon15::ILI9341ParamBits_SET_MEM_ACS_CTL
MMC_NICE_WAITING	halconf.h	232;"	d
MV	ili9341.h	/^    unsigned  MV                : 1; \/* D[5] *\/$/;"	m	struct:__anon15::ILI9341ParamBits_SET_MEM_ACS_CTL
MX	ili9341.h	/^    unsigned  MX                : 1; \/* D[6] *\/$/;"	m	struct:__anon15::ILI9341ParamBits_SET_MEM_ACS_CTL
MY	ili9341.h	/^    unsigned  MY                : 1; \/* D[7] *\/$/;"	m	struct:__anon15::ILI9341ParamBits_SET_MEM_ACS_CTL
OD	Makefile	/^OD   = $(TRGT)objdump$/;"	m
PCR_ECCEN_RESET	stmdrivers/stm32f4xx_fmc.c	64;"	d	file:
PCR_ECCEN_SET	stmdrivers/stm32f4xx_fmc.c	63;"	d	file:
PCR_MEMORYTYPE_NAND	stmdrivers/stm32f4xx_fmc.c	65;"	d	file:
PCR_PBKEN_RESET	stmdrivers/stm32f4xx_fmc.c	62;"	d	file:
PCR_PBKEN_SET	stmdrivers/stm32f4xx_fmc.c	61;"	d	file:
PROJECT	Makefile	/^PROJECT = ch$/;"	m
RIM	ili9341.h	/^    unsigned  RIM               : 1; \/* D[7] *\/$/;"	m	struct:__anon5::ILI9341ParamBits_GET_PIX_FMT
SC_15_8	ili9341.h	/^    uint8_t   SC_15_8;          \/* D[ 7: 0] *\/$/;"	m	struct:__anon10::ILI9341ParamBits_SET_COL_ADDR
SC_7_0	ili9341.h	/^    uint8_t   SC_7_0;           \/* D[15: 8] *\/$/;"	m	struct:__anon10::ILI9341ParamBits_SET_COL_ADDR
SDCLOCK_PERIOD	stmdrivers/stm32f429i_discovery_sdram.h	63;"	d
SDCMR_CTB1_2_RESET	stmdrivers/stm32f4xx_fmc.c	73;"	d	file:
SDCMR_CTB1_RESET	stmdrivers/stm32f4xx_fmc.c	71;"	d	file:
SDCMR_CTB2_RESET	stmdrivers/stm32f4xx_fmc.c	72;"	d	file:
SDCR_WriteProtection_RESET	stmdrivers/stm32f4xx_fmc.c	68;"	d	file:
SDC_INIT_RETRY	halconf.h	244;"	d
SDC_MMC_SUPPORT	halconf.h	253;"	d
SDC_NICE_WAITING	halconf.h	263;"	d
SDRAM_BANK_ADDR	stmdrivers/stm32f429i_discovery_sdram.h	46;"	d
SDRAM_CAS_LATENCY	stmdrivers/stm32f429i_discovery_sdram.h	58;"	d
SDRAM_Init	stmdrivers/stm32f429i_discovery_sdram.c	/^void SDRAM_Init(void)$/;"	f
SDRAM_InitSequence	stmdrivers/stm32f429i_discovery_sdram.c	/^void SDRAM_InitSequence(void)$/;"	f
SDRAM_MEMORY_WIDTH	stmdrivers/stm32f429i_discovery_sdram.h	52;"	d
SDRAM_MODEREG_BURST_LENGTH_1	stmdrivers/stm32f429i_discovery_sdram.h	75;"	d
SDRAM_MODEREG_BURST_LENGTH_2	stmdrivers/stm32f429i_discovery_sdram.h	76;"	d
SDRAM_MODEREG_BURST_LENGTH_4	stmdrivers/stm32f429i_discovery_sdram.h	77;"	d
SDRAM_MODEREG_BURST_LENGTH_8	stmdrivers/stm32f429i_discovery_sdram.h	78;"	d
SDRAM_MODEREG_BURST_TYPE_INTERLEAVED	stmdrivers/stm32f429i_discovery_sdram.h	80;"	d
SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL	stmdrivers/stm32f429i_discovery_sdram.h	79;"	d
SDRAM_MODEREG_CAS_LATENCY_2	stmdrivers/stm32f429i_discovery_sdram.h	81;"	d
SDRAM_MODEREG_CAS_LATENCY_3	stmdrivers/stm32f429i_discovery_sdram.h	82;"	d
SDRAM_MODEREG_OPERATING_MODE_STANDARD	stmdrivers/stm32f429i_discovery_sdram.h	83;"	d
SDRAM_MODEREG_WRITEBURST_MODE_PROGRAMMED	stmdrivers/stm32f429i_discovery_sdram.h	84;"	d
SDRAM_MODEREG_WRITEBURST_MODE_SINGLE	stmdrivers/stm32f429i_discovery_sdram.h	85;"	d
SDRAM_READBURST	stmdrivers/stm32f429i_discovery_sdram.h	69;"	d
SDRAM_ReadBuffer	stmdrivers/stm32f429i_discovery_sdram.c	/^void SDRAM_ReadBuffer(uint32_t* pBuffer, uint32_t uwReadAddress, uint32_t uwBufferSize)$/;"	f
SDRAM_WriteBuffer	stmdrivers/stm32f429i_discovery_sdram.c	/^void SDRAM_WriteBuffer(uint32_t* pBuffer, uint32_t uwWriteAddress, uint32_t uwBufferSize)$/;"	f
SDU1	main.c	/^SerialUSBDriver SDU1;$/;"	v
SERIAL_BUFFERS_SIZE	halconf.h	287;"	d
SERIAL_DEFAULT_BITRATE	halconf.h	276;"	d
SHELL_WA_SIZE	main.c	361;"	d	file:
SPI_USE_MUTUAL_EXCLUSION	halconf.h	307;"	d
SPI_USE_WAIT	halconf.h	299;"	d
SP_15_8	ili9341.h	/^    uint8_t   SP_15_8;          \/* D[ 7: 0] *\/$/;"	m	struct:__anon11::ILI9341ParamBits_SET_PAGE_ADDR
SP_7_0	ili9341.h	/^    uint8_t   SP_7_0;           \/* D[15: 8] *\/$/;"	m	struct:__anon11::ILI9341ParamBits_SET_PAGE_ADDR
SR_15_8	ili9341.h	/^    uint8_t   SR_15_8;          \/* D[ 7: 0] *\/$/;"	m	struct:__anon12::ILI9341ParamBits_SET_PARTIAL_AREA
SR_7_0	ili9341.h	/^    uint8_t   SR_7_0;           \/* D[15: 8] *\/$/;"	m	struct:__anon12::ILI9341ParamBits_SET_PARTIAL_AREA
STM32F429_439xx	stmdrivers/stm32f429i_discovery_sdram.h	38;"	d
STM32F429_439xx	stmdrivers/stm32f4xx_fmc.h	32;"	d
STM32F4xx_MCUCONF	mcuconf.h	31;"	d
STM32_ADC_ADC1_DMA_IRQ_PRIORITY	mcuconf.h	83;"	d
STM32_ADC_ADC1_DMA_PRIORITY	mcuconf.h	79;"	d
STM32_ADC_ADC1_DMA_STREAM	mcuconf.h	76;"	d
STM32_ADC_ADC2_DMA_IRQ_PRIORITY	mcuconf.h	84;"	d
STM32_ADC_ADC2_DMA_PRIORITY	mcuconf.h	80;"	d
STM32_ADC_ADC2_DMA_STREAM	mcuconf.h	77;"	d
STM32_ADC_ADC3_DMA_IRQ_PRIORITY	mcuconf.h	85;"	d
STM32_ADC_ADC3_DMA_PRIORITY	mcuconf.h	81;"	d
STM32_ADC_ADC3_DMA_STREAM	mcuconf.h	78;"	d
STM32_ADC_ADCPRE	mcuconf.h	72;"	d
STM32_ADC_IRQ_PRIORITY	mcuconf.h	82;"	d
STM32_ADC_USE_ADC1	mcuconf.h	73;"	d
STM32_ADC_USE_ADC2	mcuconf.h	74;"	d
STM32_ADC_USE_ADC3	mcuconf.h	75;"	d
STM32_BKPRAM_ENABLE	mcuconf.h	62;"	d
STM32_CAN_CAN1_IRQ_PRIORITY	mcuconf.h	92;"	d
STM32_CAN_CAN2_IRQ_PRIORITY	mcuconf.h	93;"	d
STM32_CAN_USE_CAN1	mcuconf.h	90;"	d
STM32_CAN_USE_CAN2	mcuconf.h	91;"	d
STM32_CLOCK48_REQUIRED	mcuconf.h	41;"	d
STM32_DMA2D_IRQ_PRIORITY	mcuconf.h	321;"	d
STM32_DMA2D_USE_DMA2D	mcuconf.h	320;"	d
STM32_EXT_EXTI0_IRQ_PRIORITY	mcuconf.h	98;"	d
STM32_EXT_EXTI10_15_IRQ_PRIORITY	mcuconf.h	104;"	d
STM32_EXT_EXTI16_IRQ_PRIORITY	mcuconf.h	105;"	d
STM32_EXT_EXTI17_IRQ_PRIORITY	mcuconf.h	106;"	d
STM32_EXT_EXTI18_IRQ_PRIORITY	mcuconf.h	107;"	d
STM32_EXT_EXTI19_IRQ_PRIORITY	mcuconf.h	108;"	d
STM32_EXT_EXTI1_IRQ_PRIORITY	mcuconf.h	99;"	d
STM32_EXT_EXTI20_IRQ_PRIORITY	mcuconf.h	109;"	d
STM32_EXT_EXTI21_IRQ_PRIORITY	mcuconf.h	110;"	d
STM32_EXT_EXTI22_IRQ_PRIORITY	mcuconf.h	111;"	d
STM32_EXT_EXTI2_IRQ_PRIORITY	mcuconf.h	100;"	d
STM32_EXT_EXTI3_IRQ_PRIORITY	mcuconf.h	101;"	d
STM32_EXT_EXTI4_IRQ_PRIORITY	mcuconf.h	102;"	d
STM32_EXT_EXTI5_9_IRQ_PRIORITY	mcuconf.h	103;"	d
STM32_GPT_TIM11_IRQ_PRIORITY	mcuconf.h	137;"	d
STM32_GPT_TIM12_IRQ_PRIORITY	mcuconf.h	138;"	d
STM32_GPT_TIM14_IRQ_PRIORITY	mcuconf.h	139;"	d
STM32_GPT_TIM1_IRQ_PRIORITY	mcuconf.h	128;"	d
STM32_GPT_TIM2_IRQ_PRIORITY	mcuconf.h	129;"	d
STM32_GPT_TIM3_IRQ_PRIORITY	mcuconf.h	130;"	d
STM32_GPT_TIM4_IRQ_PRIORITY	mcuconf.h	131;"	d
STM32_GPT_TIM5_IRQ_PRIORITY	mcuconf.h	132;"	d
STM32_GPT_TIM6_IRQ_PRIORITY	mcuconf.h	133;"	d
STM32_GPT_TIM7_IRQ_PRIORITY	mcuconf.h	134;"	d
STM32_GPT_TIM8_IRQ_PRIORITY	mcuconf.h	135;"	d
STM32_GPT_TIM9_IRQ_PRIORITY	mcuconf.h	136;"	d
STM32_GPT_USE_TIM1	mcuconf.h	116;"	d
STM32_GPT_USE_TIM11	mcuconf.h	125;"	d
STM32_GPT_USE_TIM12	mcuconf.h	126;"	d
STM32_GPT_USE_TIM14	mcuconf.h	127;"	d
STM32_GPT_USE_TIM2	mcuconf.h	117;"	d
STM32_GPT_USE_TIM3	mcuconf.h	118;"	d
STM32_GPT_USE_TIM4	mcuconf.h	119;"	d
STM32_GPT_USE_TIM5	mcuconf.h	120;"	d
STM32_GPT_USE_TIM6	mcuconf.h	121;"	d
STM32_GPT_USE_TIM7	mcuconf.h	122;"	d
STM32_GPT_USE_TIM8	mcuconf.h	123;"	d
STM32_GPT_USE_TIM9	mcuconf.h	124;"	d
STM32_HPRE	mcuconf.h	48;"	d
STM32_HSE_ENABLED	mcuconf.h	39;"	d
STM32_HSI_ENABLED	mcuconf.h	37;"	d
STM32_I2C_I2C1_DMA_ERROR_HOOK	mcuconf.h	159;"	d
STM32_I2C_I2C1_DMA_PRIORITY	mcuconf.h	156;"	d
STM32_I2C_I2C1_IRQ_PRIORITY	mcuconf.h	153;"	d
STM32_I2C_I2C1_RX_DMA_STREAM	mcuconf.h	147;"	d
STM32_I2C_I2C1_TX_DMA_STREAM	mcuconf.h	148;"	d
STM32_I2C_I2C2_DMA_ERROR_HOOK	mcuconf.h	160;"	d
STM32_I2C_I2C2_DMA_PRIORITY	mcuconf.h	157;"	d
STM32_I2C_I2C2_IRQ_PRIORITY	mcuconf.h	154;"	d
STM32_I2C_I2C2_RX_DMA_STREAM	mcuconf.h	149;"	d
STM32_I2C_I2C2_TX_DMA_STREAM	mcuconf.h	150;"	d
STM32_I2C_I2C3_DMA_ERROR_HOOK	mcuconf.h	161;"	d
STM32_I2C_I2C3_DMA_PRIORITY	mcuconf.h	158;"	d
STM32_I2C_I2C3_IRQ_PRIORITY	mcuconf.h	155;"	d
STM32_I2C_I2C3_RX_DMA_STREAM	mcuconf.h	151;"	d
STM32_I2C_I2C3_TX_DMA_STREAM	mcuconf.h	152;"	d
STM32_I2C_USE_I2C1	mcuconf.h	144;"	d
STM32_I2C_USE_I2C2	mcuconf.h	145;"	d
STM32_I2C_USE_I2C3	mcuconf.h	146;"	d
STM32_I2SSRC	mcuconf.h	57;"	d
STM32_ICU_TIM1_IRQ_PRIORITY	mcuconf.h	173;"	d
STM32_ICU_TIM2_IRQ_PRIORITY	mcuconf.h	174;"	d
STM32_ICU_TIM3_IRQ_PRIORITY	mcuconf.h	175;"	d
STM32_ICU_TIM4_IRQ_PRIORITY	mcuconf.h	176;"	d
STM32_ICU_TIM5_IRQ_PRIORITY	mcuconf.h	177;"	d
STM32_ICU_TIM8_IRQ_PRIORITY	mcuconf.h	178;"	d
STM32_ICU_TIM9_IRQ_PRIORITY	mcuconf.h	179;"	d
STM32_ICU_USE_TIM1	mcuconf.h	166;"	d
STM32_ICU_USE_TIM2	mcuconf.h	167;"	d
STM32_ICU_USE_TIM3	mcuconf.h	168;"	d
STM32_ICU_USE_TIM4	mcuconf.h	169;"	d
STM32_ICU_USE_TIM5	mcuconf.h	170;"	d
STM32_ICU_USE_TIM8	mcuconf.h	171;"	d
STM32_ICU_USE_TIM9	mcuconf.h	172;"	d
STM32_LSE_ENABLED	mcuconf.h	40;"	d
STM32_LSI_ENABLED	mcuconf.h	38;"	d
STM32_LTDC_ER_IRQ_PRIORITY	mcuconf.h	315;"	d
STM32_LTDC_EV_IRQ_PRIORITY	mcuconf.h	314;"	d
STM32_LTDC_USE_LTDC	mcuconf.h	313;"	d
STM32_MAC_BUFFERS_SIZE	mcuconf.h	186;"	d
STM32_MAC_ETH1_CHANGE_PHY_STATE	mcuconf.h	188;"	d
STM32_MAC_ETH1_IRQ_PRIORITY	mcuconf.h	189;"	d
STM32_MAC_IP_CHECKSUM_OFFLOAD	mcuconf.h	190;"	d
STM32_MAC_PHY_TIMEOUT	mcuconf.h	187;"	d
STM32_MAC_RECEIVE_BUFFERS	mcuconf.h	185;"	d
STM32_MAC_TRANSMIT_BUFFERS	mcuconf.h	184;"	d
STM32_MCO1PRE	mcuconf.h	54;"	d
STM32_MCO1SEL	mcuconf.h	53;"	d
STM32_MCO2PRE	mcuconf.h	56;"	d
STM32_MCO2SEL	mcuconf.h	55;"	d
STM32_NO_INIT	mcuconf.h	36;"	d
STM32_PLLI2SN_VALUE	mcuconf.h	58;"	d
STM32_PLLI2SR_VALUE	mcuconf.h	59;"	d
STM32_PLLM_VALUE	mcuconf.h	44;"	d
STM32_PLLN_VALUE	mcuconf.h	45;"	d
STM32_PLLP_VALUE	mcuconf.h	46;"	d
STM32_PLLQ_VALUE	mcuconf.h	47;"	d
STM32_PLLSAIN_VALUE	mcuconf.h	64;"	d
STM32_PLLSAIQ_VALUE	mcuconf.h	65;"	d
STM32_PLLSAIR_POST	mcuconf.h	67;"	d
STM32_PLLSAIR_VALUE	mcuconf.h	66;"	d
STM32_PLLSRC	mcuconf.h	43;"	d
STM32_PLS	mcuconf.h	61;"	d
STM32_PPRE1	mcuconf.h	49;"	d
STM32_PPRE2	mcuconf.h	50;"	d
STM32_PVD_ENABLE	mcuconf.h	60;"	d
STM32_PWM_TIM1_IRQ_PRIORITY	mcuconf.h	203;"	d
STM32_PWM_TIM2_IRQ_PRIORITY	mcuconf.h	204;"	d
STM32_PWM_TIM3_IRQ_PRIORITY	mcuconf.h	205;"	d
STM32_PWM_TIM4_IRQ_PRIORITY	mcuconf.h	206;"	d
STM32_PWM_TIM5_IRQ_PRIORITY	mcuconf.h	207;"	d
STM32_PWM_TIM8_IRQ_PRIORITY	mcuconf.h	208;"	d
STM32_PWM_TIM9_IRQ_PRIORITY	mcuconf.h	209;"	d
STM32_PWM_USE_ADVANCED	mcuconf.h	195;"	d
STM32_PWM_USE_TIM1	mcuconf.h	196;"	d
STM32_PWM_USE_TIM2	mcuconf.h	197;"	d
STM32_PWM_USE_TIM3	mcuconf.h	198;"	d
STM32_PWM_USE_TIM4	mcuconf.h	199;"	d
STM32_PWM_USE_TIM5	mcuconf.h	200;"	d
STM32_PWM_USE_TIM8	mcuconf.h	201;"	d
STM32_PWM_USE_TIM9	mcuconf.h	202;"	d
STM32_RTCPRE_VALUE	mcuconf.h	52;"	d
STM32_RTCSEL	mcuconf.h	51;"	d
STM32_SAISRC	mcuconf.h	63;"	d
STM32_SERIAL_UART4_PRIORITY	mcuconf.h	223;"	d
STM32_SERIAL_UART5_PRIORITY	mcuconf.h	224;"	d
STM32_SERIAL_USART1_PRIORITY	mcuconf.h	220;"	d
STM32_SERIAL_USART2_PRIORITY	mcuconf.h	221;"	d
STM32_SERIAL_USART3_PRIORITY	mcuconf.h	222;"	d
STM32_SERIAL_USART6_PRIORITY	mcuconf.h	225;"	d
STM32_SERIAL_USE_UART4	mcuconf.h	217;"	d
STM32_SERIAL_USE_UART5	mcuconf.h	218;"	d
STM32_SERIAL_USE_USART1	mcuconf.h	214;"	d
STM32_SERIAL_USE_USART2	mcuconf.h	215;"	d
STM32_SERIAL_USE_USART3	mcuconf.h	216;"	d
STM32_SERIAL_USE_USART6	mcuconf.h	219;"	d
STM32_SPI_DMA_ERROR_HOOK	mcuconf.h	260;"	d
STM32_SPI_SPI1_DMA_PRIORITY	mcuconf.h	248;"	d
STM32_SPI_SPI1_IRQ_PRIORITY	mcuconf.h	254;"	d
STM32_SPI_SPI1_RX_DMA_STREAM	mcuconf.h	236;"	d
STM32_SPI_SPI1_TX_DMA_STREAM	mcuconf.h	237;"	d
STM32_SPI_SPI2_DMA_PRIORITY	mcuconf.h	249;"	d
STM32_SPI_SPI2_IRQ_PRIORITY	mcuconf.h	255;"	d
STM32_SPI_SPI2_RX_DMA_STREAM	mcuconf.h	238;"	d
STM32_SPI_SPI2_TX_DMA_STREAM	mcuconf.h	239;"	d
STM32_SPI_SPI3_DMA_PRIORITY	mcuconf.h	250;"	d
STM32_SPI_SPI3_IRQ_PRIORITY	mcuconf.h	256;"	d
STM32_SPI_SPI3_RX_DMA_STREAM	mcuconf.h	240;"	d
STM32_SPI_SPI3_TX_DMA_STREAM	mcuconf.h	241;"	d
STM32_SPI_SPI4_DMA_PRIORITY	mcuconf.h	251;"	d
STM32_SPI_SPI4_IRQ_PRIORITY	mcuconf.h	257;"	d
STM32_SPI_SPI4_RX_DMA_STREAM	mcuconf.h	242;"	d
STM32_SPI_SPI4_TX_DMA_STREAM	mcuconf.h	243;"	d
STM32_SPI_SPI5_DMA_PRIORITY	mcuconf.h	252;"	d
STM32_SPI_SPI5_IRQ_PRIORITY	mcuconf.h	258;"	d
STM32_SPI_SPI5_RX_DMA_STREAM	mcuconf.h	244;"	d
STM32_SPI_SPI5_TX_DMA_STREAM	mcuconf.h	245;"	d
STM32_SPI_SPI6_DMA_PRIORITY	mcuconf.h	253;"	d
STM32_SPI_SPI6_IRQ_PRIORITY	mcuconf.h	259;"	d
STM32_SPI_SPI6_RX_DMA_STREAM	mcuconf.h	246;"	d
STM32_SPI_SPI6_TX_DMA_STREAM	mcuconf.h	247;"	d
STM32_SPI_USE_SPI1	mcuconf.h	230;"	d
STM32_SPI_USE_SPI2	mcuconf.h	231;"	d
STM32_SPI_USE_SPI3	mcuconf.h	232;"	d
STM32_SPI_USE_SPI4	mcuconf.h	233;"	d
STM32_SPI_USE_SPI5	mcuconf.h	234;"	d
STM32_SPI_USE_SPI6	mcuconf.h	235;"	d
STM32_SW	mcuconf.h	42;"	d
STM32_UART_DMA_ERROR_HOOK	mcuconf.h	295;"	d
STM32_UART_UART4_DMA_PRIORITY	mcuconf.h	292;"	d
STM32_UART_UART4_IRQ_PRIORITY	mcuconf.h	286;"	d
STM32_UART_UART4_RX_DMA_STREAM	mcuconf.h	277;"	d
STM32_UART_UART4_TX_DMA_STREAM	mcuconf.h	278;"	d
STM32_UART_UART5_DMA_PRIORITY	mcuconf.h	293;"	d
STM32_UART_UART5_IRQ_PRIORITY	mcuconf.h	287;"	d
STM32_UART_UART5_RX_DMA_STREAM	mcuconf.h	279;"	d
STM32_UART_UART5_TX_DMA_STREAM	mcuconf.h	280;"	d
STM32_UART_USART1_DMA_PRIORITY	mcuconf.h	289;"	d
STM32_UART_USART1_IRQ_PRIORITY	mcuconf.h	283;"	d
STM32_UART_USART1_RX_DMA_STREAM	mcuconf.h	271;"	d
STM32_UART_USART1_TX_DMA_STREAM	mcuconf.h	272;"	d
STM32_UART_USART2_DMA_PRIORITY	mcuconf.h	290;"	d
STM32_UART_USART2_IRQ_PRIORITY	mcuconf.h	284;"	d
STM32_UART_USART2_RX_DMA_STREAM	mcuconf.h	273;"	d
STM32_UART_USART2_TX_DMA_STREAM	mcuconf.h	274;"	d
STM32_UART_USART3_DMA_PRIORITY	mcuconf.h	291;"	d
STM32_UART_USART3_IRQ_PRIORITY	mcuconf.h	285;"	d
STM32_UART_USART3_RX_DMA_STREAM	mcuconf.h	275;"	d
STM32_UART_USART3_TX_DMA_STREAM	mcuconf.h	276;"	d
STM32_UART_USART6_DMA_PRIORITY	mcuconf.h	294;"	d
STM32_UART_USART6_IRQ_PRIORITY	mcuconf.h	288;"	d
STM32_UART_USART6_RX_DMA_STREAM	mcuconf.h	281;"	d
STM32_UART_USART6_TX_DMA_STREAM	mcuconf.h	282;"	d
STM32_UART_USE_UART4	mcuconf.h	268;"	d
STM32_UART_USE_UART5	mcuconf.h	269;"	d
STM32_UART_USE_USART1	mcuconf.h	265;"	d
STM32_UART_USE_USART2	mcuconf.h	266;"	d
STM32_UART_USE_USART3	mcuconf.h	267;"	d
STM32_UART_USE_USART6	mcuconf.h	270;"	d
STM32_USB_OTG1_IRQ_PRIORITY	mcuconf.h	302;"	d
STM32_USB_OTG1_RX_FIFO_SIZE	mcuconf.h	304;"	d
STM32_USB_OTG2_IRQ_PRIORITY	mcuconf.h	303;"	d
STM32_USB_OTG2_RX_FIFO_SIZE	mcuconf.h	305;"	d
STM32_USB_OTGFIFO_FILL_BASEPRI	mcuconf.h	308;"	d
STM32_USB_OTG_THREAD_PRIO	mcuconf.h	306;"	d
STM32_USB_OTG_THREAD_STACK_SIZE	mcuconf.h	307;"	d
STM32_USB_USE_OTG1	mcuconf.h	300;"	d
STM32_USB_USE_OTG2	mcuconf.h	301;"	d
STS_7_0	ili9341.h	/^    uint8_t   STS_7_0;          \/* D[15: 8] *\/$/;"	m	struct:__anon18::ILI9341ParamBits_SET_TEAR_SCANLINE
STS_8	ili9341.h	/^    uint8_t   STS_8;            \/* D[ 7: 0] *\/$/;"	m	struct:__anon18::ILI9341ParamBits_SET_TEAR_SCANLINE
SYSTEM_HALT_HOOK	chconf.h	518;"	d
SYSTEM_TICK_EVENT_HOOK	chconf.h	507;"	d
TCPPSRC	Makefile	/^TCPPSRC =$/;"	m
TCSRC	Makefile	/^TCSRC =$/;"	m
TEST_WA_SIZE	main.c	362;"	d	file:
TFA_15_8	ili9341.h	/^    uint8_t   TFA_15_8;         \/* D[ 7: 0] *\/$/;"	m	struct:__anon13::ILI9341ParamBits_SET_VSCROLL
TFA_7_0	ili9341.h	/^    uint8_t   TFA_7_0;          \/* D[15: 8] *\/$/;"	m	struct:__anon13::ILI9341ParamBits_SET_VSCROLL
THREAD_CONTEXT_SWITCH_HOOK	chconf.h	486;"	d
THREAD_EXT_EXIT_HOOK	chconf.h	476;"	d
THREAD_EXT_FIELDS	chconf.h	450;"	d
THREAD_EXT_INIT_HOOK	chconf.h	462;"	d
TOPT	Makefile	/^TOPT = -mthumb -DTHUMB$/;"	m
TRGT	Makefile	/^TRGT = mingw32-$/;"	m
Thread1	main.c	/^static msg_t Thread1(void *arg) {$/;"	f	file:
Thread2	main.c	/^static msg_t Thread2(void *arg) {$/;"	f	file:
UADEFS	Makefile	/^UADEFS =$/;"	m
UDEFS	Makefile	/^UDEFS =$/;"	m
UINCDIR	Makefile	/^UINCDIR =$/;"	m
ULIBDIR	Makefile	/^ULIBDIR =$/;"	m
ULIBS	Makefile	/^ULIBS =$/;"	m
USBD2_DATA_AVAILABLE_EP	usbcfg.c	24;"	d	file:
USBD2_DATA_REQUEST_EP	usbcfg.c	23;"	d	file:
USBD2_INTERRUPT_REQUEST_EP	usbcfg.c	25;"	d	file:
USE_COPT	Makefile	/^  USE_COPT = $/;"	m
USE_CPPOPT	Makefile	/^  USE_CPPOPT = -fno-rtti$/;"	m
USE_FPU	Makefile	/^  USE_FPU = no$/;"	m
USE_FWLIB	Makefile	/^  USE_FWLIB = no$/;"	m
USE_LINK_GC	Makefile	/^  USE_LINK_GC = yes$/;"	m
USE_OPT	Makefile	/^  USE_OPT = -O0 -ggdb -fomit-frame-pointer -falign-functions=16 -fverbose-asm$/;"	m
USE_THUMB	Makefile	/^  USE_THUMB = yes$/;"	m
USE_VERBOSE_COMPILE	Makefile	/^  USE_VERBOSE_COMPILE = no$/;"	m
VSA_15_8	ili9341.h	/^    uint8_t   VSA_15_8;         \/* D[23:16] *\/$/;"	m	struct:__anon13::ILI9341ParamBits_SET_VSCROLL
VSA_7_0	ili9341.h	/^    uint8_t   VSA_7_0;          \/* D[31:24] *\/$/;"	m	struct:__anon13::ILI9341ParamBits_SET_VSCROLL
VSP_15_8	ili9341.h	/^    uint8_t   VSP_15_8;         \/* D[ 7: 0] *\/$/;"	m	struct:__anon16::ILI9341ParamBits_SET_VSCROLL_ADDR
VSP_7_0	ili9341.h	/^    uint8_t   VSP_7_0;          \/* D[15: 8] *\/$/;"	m	struct:__anon16::ILI9341ParamBits_SET_VSCROLL_ADDR
_CHCONF_H_	chconf.h	29;"	d
_HALCONF_H_	halconf.h	29;"	d
_ILI9341_H_	ili9341.h	23;"	d
_USBCFG_H_	usbcfg.h	18;"	d
__STM32429I_DISCO_SDRAM_H	stmdrivers/stm32f429i_discovery_sdram.h	31;"	d
__STM32F4xx_FMC_H	stmdrivers/stm32f4xx_fmc.h	25;"	d
__wolf3d_vgagraph_chunk87_h_included	res/wolf3d_vgagraph_chunk87.h	3;"	d
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 1; \/* D[3] *\/$/;"	m	struct:__anon17::ILI9341ParamBits_SET_PIX_FMT
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 1; \/* D[3] *\/$/;"	m	struct:__anon5::ILI9341ParamBits_GET_PIX_FMT
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 2; \/* D[1:0] *\/$/;"	m	struct:__anon15::ILI9341ParamBits_SET_MEM_ACS_CTL
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 2; \/* D[1:0] *\/$/;"	m	struct:__anon22::ILI9341ParamBits_SET_DISPLAY_CTL
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 2; \/* D[1:0] *\/$/;"	m	struct:__anon23::ILI9341ParamBits_GET_DISPLAY_CTL
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 2; \/* D[1:0] *\/$/;"	m	struct:__anon3::ILI9341ParamBits_GET_PWR_MODE
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 2; \/* D[1:0] *\/$/;"	m	struct:__anon4::ILI9341ParamBits_GET_MADCTL
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 2; \/* D[1:0] *\/$/;"	m	struct:__anon7::ILI9341ParamBits_GET_SIG_MODE
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 5; \/* D[ 4: 0] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 5; \/* D[7:3] *\/$/;"	m	struct:__anon6::ILI9341ParamBits_GET_IMG_FMT
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 6; \/* D[5:0] *\/$/;"	m	struct:__anon8::ILI9341ParamBits_GET_SELF_DIAG
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 6; \/* D[7:2] *\/$/;"	m	struct:__anon24::ILI9341ParamBits_SET_CABC
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 6; \/* D[7:2] *\/$/;"	m	struct:__anon25::ILI9341ParamBits_GET_CABC
_reserved_1	ili9341.h	/^    unsigned  _reserved_1       : 7; \/* D[7:1] *\/$/;"	m	struct:__anon14::ILI9341ParamBits_CMD_TEARING_ON
_reserved_2	ili9341.h	/^    unsigned  _reserved_2       : 1; \/* D[14] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
_reserved_2	ili9341.h	/^    unsigned  _reserved_2       : 1; \/* D[4] *\/$/;"	m	struct:__anon22::ILI9341ParamBits_SET_DISPLAY_CTL
_reserved_2	ili9341.h	/^    unsigned  _reserved_2       : 1; \/* D[4] *\/$/;"	m	struct:__anon23::ILI9341ParamBits_GET_DISPLAY_CTL
_reserved_2	ili9341.h	/^    unsigned  _reserved_2       : 1; \/* D[7] *\/$/;"	m	struct:__anon17::ILI9341ParamBits_SET_PIX_FMT
_reserved_3	ili9341.h	/^    unsigned  _reserved_3       : 1; \/* D[7:6] *\/$/;"	m	struct:__anon22::ILI9341ParamBits_SET_DISPLAY_CTL
_reserved_3	ili9341.h	/^    unsigned  _reserved_3       : 1; \/* D[7:6] *\/$/;"	m	struct:__anon23::ILI9341ParamBits_GET_DISPLAY_CTL
_reserved_3	ili9341.h	/^    unsigned  _reserved_3       : 2; \/* D[24:23] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
all_off	ili9341.h	/^    unsigned  all_off           : 1; \/* D[12] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
all_on	ili9341.h	/^    unsigned  all_on            : 1; \/* D[11] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
assert_param	stmdrivers/stm32f4xx_fmc.c	40;"	d	file:
bgr_nrgb	ili9341.h	/^    unsigned  bgr_nrgb          : 1; \/* D[26] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
bgr_nrgb	ili9341.h	/^    unsigned  bgr_nrgb          : 1; \/* D[3] *\/$/;"	m	struct:__anon4::ILI9341ParamBits_GET_MADCTL
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon1	typeref:struct:__anon1::ILI9341ParamBits_GET_ID_INFO
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon10	typeref:struct:__anon10::ILI9341ParamBits_SET_COL_ADDR
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon11	typeref:struct:__anon11::ILI9341ParamBits_SET_PAGE_ADDR
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon12	typeref:struct:__anon12::ILI9341ParamBits_SET_PARTIAL_AREA
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon13	typeref:struct:__anon13::ILI9341ParamBits_SET_VSCROLL
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon14	typeref:struct:__anon14::ILI9341ParamBits_CMD_TEARING_ON
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon15	typeref:struct:__anon15::ILI9341ParamBits_SET_MEM_ACS_CTL
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon16	typeref:struct:__anon16::ILI9341ParamBits_SET_VSCROLL_ADDR
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon17	typeref:struct:__anon17::ILI9341ParamBits_SET_PIX_FMT
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon18	typeref:struct:__anon18::ILI9341ParamBits_SET_TEAR_SCANLINE
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon19	typeref:struct:__anon19::ILI9341ParamBits_GET_TEAR_SCANLINE
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon2	typeref:struct:__anon2::ILI9341ParamBits_GET_STATUS
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon20	typeref:struct:__anon20::ILI9341ParamBits_SET_BRIGHTNESS
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon21	typeref:struct:__anon21::ILI9341ParamBits_GET_BRIGHTNESS
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon22	typeref:struct:__anon22::ILI9341ParamBits_SET_DISPLAY_CTL
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon23	typeref:struct:__anon23::ILI9341ParamBits_GET_DISPLAY_CTL
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon24	typeref:struct:__anon24::ILI9341ParamBits_SET_CABC
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon25	typeref:struct:__anon25::ILI9341ParamBits_GET_CABC
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon26	typeref:struct:__anon26::ILI9341ParamBits_SET_CABC_MIN
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon27	typeref:struct:__anon27::ILI9341ParamBits_GET_CABC_MIN
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon3	typeref:struct:__anon3::ILI9341ParamBits_GET_PWR_MODE
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon4	typeref:struct:__anon4::ILI9341ParamBits_GET_MADCTL
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon5	typeref:struct:__anon5::ILI9341ParamBits_GET_PIX_FMT
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon6	typeref:struct:__anon6::ILI9341ParamBits_GET_IMG_FMT
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon7	typeref:struct:__anon7::ILI9341ParamBits_GET_SIG_MODE
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon8	typeref:struct:__anon8::ILI9341ParamBits_GET_SELF_DIAG
bits	ili9341.h	/^  } bits;$/;"	m	union:__anon9	typeref:struct:__anon9::ILI9341ParamBits_SET_GAMMA
booster	ili9341.h	/^    unsigned  booster           : 1; \/* D[31] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
booster	ili9341.h	/^    unsigned  booster           : 1; \/* D[7] *\/$/;"	m	struct:__anon3::ILI9341ParamBits_GET_PWR_MODE
btt_nttb	ili9341.h	/^    unsigned  btt_nttb          : 1; \/* D[7] *\/$/;"	m	struct:__anon4::ILI9341ParamBits_GET_MADCTL
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon14
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon15
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon17
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon20
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon21
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon22
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon23
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon24
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon25
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon26
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon27
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon3
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon4
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon5
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon6
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon7
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon8
bytes	ili9341.h	/^  uint8_t   bytes[1];$/;"	m	union:__anon9
bytes	ili9341.h	/^  uint8_t   bytes[2];$/;"	m	union:__anon16
bytes	ili9341.h	/^  uint8_t   bytes[2];$/;"	m	union:__anon19
bytes	ili9341.h	/^  uint8_t   bytes[4];$/;"	m	union:__anon1
bytes	ili9341.h	/^  uint8_t   bytes[4];$/;"	m	union:__anon10
bytes	ili9341.h	/^  uint8_t   bytes[4];$/;"	m	union:__anon11
bytes	ili9341.h	/^  uint8_t   bytes[4];$/;"	m	union:__anon12
bytes	ili9341.h	/^  uint8_t   bytes[4];$/;"	m	union:__anon18
bytes	ili9341.h	/^  uint8_t   bytes[4];$/;"	m	union:__anon2
bytes	ili9341.h	/^  uint8_t   bytes[6];$/;"	m	union:__anon13
chDbgAssert	ili9341.c	47;"	d	file:
chDbgAssert	ili9341.c	49;"	d	file:
chDbgCheck	ili9341.c	40;"	d	file:
chDbgCheck	ili9341.c	42;"	d	file:
chDbgCheckClassI	ili9341.c	61;"	d	file:
chDbgCheckClassS	ili9341.c	54;"	d	file:
chDbgCheckClassS	ili9341.c	56;"	d	file:
chDbgCheckClassS	ili9341.c	59;"	d	file:
cmd_check	main.c	/^static void cmd_check(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
cmd_erase	main.c	/^static void cmd_erase(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
cmd_mem	main.c	/^static void cmd_mem(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
cmd_normal	main.c	/^static void cmd_normal(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
cmd_reset	main.c	/^static void cmd_reset(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
cmd_sdram	main.c	/^static void cmd_sdram(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
cmd_selfrefresh	main.c	/^static void cmd_selfrefresh(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
cmd_test	main.c	/^static void cmd_test(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
cmd_threads	main.c	/^static void cmd_threads(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
cmd_write	main.c	/^static void cmd_write(BaseSequentialStream *chp, int argc, char *argv[]) {$/;"	f	file:
coladr_rtl_nltr	ili9341.h	/^    unsigned  coladr_rtl_nltr   : 1; \/* D[29] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
commands	main.c	/^static const ShellCommand commands[] = {$/;"	v	file:
config	ili9341.h	/^  const ILI9341Config   *config;    \/**< Driver configuration.*\/$/;"	m	struct:ILI9341Driver
data_enable	ili9341.h	/^    unsigned  data_enable       : 1; \/* D[2] *\/$/;"	m	struct:__anon7::ILI9341ParamBits_GET_SIG_MODE
dcx_pad	ili9341.h	/^  uint16_t      dcx_pad;                \/**< <tt>D\/!C<\/tt> signal pad.*\/$/;"	m	struct:ILI9341Config
dcx_port	ili9341.h	/^  ioportid_t    dcx_port;               \/**< <tt>D\/!C<\/tt> signal port.*\/$/;"	m	struct:ILI9341Config
display	ili9341.h	/^    unsigned  display           : 1; \/* D[10] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
display	ili9341.h	/^    unsigned  display           : 1; \/* D[2] *\/$/;"	m	struct:__anon3::ILI9341ParamBits_GET_PWR_MODE
dma2d_bg_laycfg	main.c	/^static const dma2d_laycfg_t dma2d_bg_laycfg = {$/;"	v	file:
dma2d_cfg	main.c	/^static const DMA2DConfig dma2d_cfg = {$/;"	v	file:
dma2d_fg_laycfg	main.c	/^static const dma2d_laycfg_t dma2d_fg_laycfg = {$/;"	v	file:
dma2d_frame_laycfg	main.c	/^static const dma2d_laycfg_t dma2d_frame_laycfg = {$/;"	v	file:
dma2d_palcfg	main.c	/^static const dma2d_palcfg_t dma2d_palcfg = {$/;"	v	file:
dma2d_test	main.c	/^static void dma2d_test(void) {$/;"	f	file:
ep1config	usbcfg.c	/^static const USBEndpointConfig ep1config = {$/;"	v	file:
ep1instate	usbcfg.c	/^static USBInEndpointState ep1instate;$/;"	v	file:
ep1outstate	usbcfg.c	/^static USBOutEndpointState ep1outstate;$/;"	v	file:
ep2config	usbcfg.c	/^static const USBEndpointConfig ep2config = {$/;"	v	file:
ep2instate	usbcfg.c	/^static USBInEndpointState ep2instate;$/;"	v	file:
frame_buffer	main.c	/^static uint8_t frame_buffer[240 * 320 * 3] __attribute__((section(".sdram")));$/;"	v	file:
func_err	ili9341.h	/^    unsigned  func_err          : 1; \/* D[6] *\/$/;"	m	struct:__anon8::ILI9341ParamBits_GET_SELF_DIAG
gamma_curve	ili9341.h	/^    uint8_t   gamma_curve;      \/* D[7:0] *\/$/;"	m	struct:__anon9::ILI9341ParamBits_SET_GAMMA
gamma_curve	ili9341.h	/^    unsigned  gamma_curve       : 3; \/* D[ 8: 6] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
gamma_curve	ili9341.h	/^    unsigned  gamma_curve       : 3; \/* D[2:0] *\/$/;"	m	struct:__anon6::ILI9341ParamBits_GET_IMG_FMT
get_descriptor	usbcfg.c	/^static const USBDescriptor *get_descriptor(USBDriver *usbp,$/;"	f	file:
hrefr_rtl_nltr	ili9341.h	/^    unsigned  hrefr_rtl_nltr    : 1; \/* D[25] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
hsync	ili9341.h	/^    unsigned  hsync             : 1; \/* D[5] *\/$/;"	m	struct:__anon7::ILI9341ParamBits_GET_SIG_MODE
idle	ili9341.h	/^    unsigned  idle              : 1; \/* D[19] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
idle	ili9341.h	/^    unsigned  idle              : 1; \/* D[6] *\/$/;"	m	struct:__anon3::ILI9341ParamBits_GET_PWR_MODE
ili9341AcquireBus	ili9341.c	/^void ili9341AcquireBus(ILI9341Driver *driverp) {$/;"	f
ili9341AcquireBusS	ili9341.c	/^void ili9341AcquireBusS(ILI9341Driver *driverp) {$/;"	f
ili9341ObjectInit	ili9341.c	/^void ili9341ObjectInit(ILI9341Driver *driverp) {$/;"	f
ili9341ReadByte	ili9341.c	/^uint8_t ili9341ReadByte(ILI9341Driver *driverp) {$/;"	f
ili9341ReadChunk	ili9341.c	/^void ili9341ReadChunk(ILI9341Driver *driverp, uint8_t chunk[],$/;"	f
ili9341ReleaseBus	ili9341.c	/^void ili9341ReleaseBus(ILI9341Driver *driverp) {$/;"	f
ili9341ReleaseBusS	ili9341.c	/^void ili9341ReleaseBusS(ILI9341Driver *driverp) {$/;"	f
ili9341Select	ili9341.c	/^void ili9341Select(ILI9341Driver *driverp) {$/;"	f
ili9341SelectI	ili9341.c	/^void ili9341SelectI(ILI9341Driver *driverp) {$/;"	f
ili9341Start	ili9341.c	/^void ili9341Start(ILI9341Driver *driverp, const ILI9341Config *configp) {$/;"	f
ili9341Stop	ili9341.c	/^void ili9341Stop(ILI9341Driver *driverp) {$/;"	f
ili9341Unselect	ili9341.c	/^void ili9341Unselect(ILI9341Driver *driverp) {$/;"	f
ili9341UnselectI	ili9341.c	/^void ili9341UnselectI(ILI9341Driver *driverp) {$/;"	f
ili9341WriteByte	ili9341.c	/^void ili9341WriteByte(ILI9341Driver *driverp, uint8_t value) {$/;"	f
ili9341WriteChunk	ili9341.c	/^void ili9341WriteChunk(ILI9341Driver *driverp, const uint8_t chunk[],$/;"	f
ili9341WriteCommand	ili9341.c	/^void ili9341WriteCommand(ILI9341Driver *driverp, uint8_t cmd) {$/;"	f
ili9341_cfg	main.c	/^const ILI9341Config ili9341_cfg = {$/;"	v
ili9341state_t	ili9341.h	/^typedef enum ili9341state_t ili9341state_t;$/;"	t	typeref:enum:ili9341state_t
ili9341state_t	ili9341.h	/^typedef enum ili9341state_t {$/;"	g
ili9341state_t	ili9341.h	/^} ili9341state_t;$/;"	t	typeref:enum:ili9341state_t
initialize_lcd	main.c	/^static void initialize_lcd(void) {$/;"	f	file:
invert	ili9341.h	/^    unsigned  invert            : 1; \/* D[13] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
invert	ili9341.h	/^    unsigned  invert            : 1; \/* D[5] *\/$/;"	m	struct:__anon4::ILI9341ParamBits_GET_MADCTL
lock	ili9341.h	/^  Mutex                 lock;       \/**< Multithreading lock.*\/$/;"	m	struct:ILI9341Driver
lock	ili9341.h	/^  Semaphore             lock;       \/**< Multithreading lock.*\/$/;"	m	struct:ILI9341Driver
ltdc_cfg	main.c	/^static const LTDCConfig ltdc_cfg = {$/;"	v	file:
ltdc_fullscreen_wincfg	main.c	/^static const ltdc_window_t ltdc_fullscreen_wincfg = {$/;"	v	file:
ltdc_screen_frmcfg1	main.c	/^static const ltdc_frame_t ltdc_screen_frmcfg1 = {$/;"	v	file:
ltdc_screen_laycfg1	main.c	/^static const ltdc_laycfg_t ltdc_screen_laycfg1 = {$/;"	v	file:
ltdc_view_frmcfg1	main.c	/^static const ltdc_frame_t ltdc_view_frmcfg1 = {$/;"	v	file:
ltdc_view_laycfg1	main.c	/^static const ltdc_laycfg_t ltdc_view_laycfg1 = {$/;"	v	file:
main	main.c	/^int main(void) {$/;"	f
normal	ili9341.h	/^    unsigned  normal            : 1; \/* D[16] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
normal	ili9341.h	/^    unsigned  normal            : 1; \/* D[3] *\/$/;"	m	struct:__anon3::ILI9341ParamBits_GET_PWR_MODE
partial	ili9341.h	/^    unsigned  partial           : 1; \/* D[18] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
partial	ili9341.h	/^    unsigned  partial           : 1; \/* D[5] *\/$/;"	m	struct:__anon3::ILI9341ParamBits_GET_PWR_MODE
pixel_clock	ili9341.h	/^    unsigned  pixel_clock       : 1; \/* D[3] *\/$/;"	m	struct:__anon7::ILI9341ParamBits_GET_SIG_MODE
pixel_format	ili9341.h	/^    unsigned  pixel_format      : 3; \/* D[22:20] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
refr_btt_nttb	ili9341.h	/^    unsigned  refr_btt_nttb     : 1; \/* D[4] *\/$/;"	m	struct:__anon4::ILI9341ParamBits_GET_MADCTL
refr_rtl_nltr	ili9341.h	/^    unsigned  refr_rtl_nltr     : 1; \/* D[2] *\/$/;"	m	struct:__anon4::ILI9341ParamBits_GET_MADCTL
reg_err	ili9341.h	/^    unsigned  reg_err           : 1; \/* D[7] *\/$/;"	m	struct:__anon8::ILI9341ParamBits_GET_SELF_DIAG
reserved_	ili9341.h	/^    uint8_t reserved_;$/;"	m	struct:__anon1::ILI9341ParamBits_GET_ID_INFO
rowadr_btt_nttb	ili9341.h	/^    unsigned  rowadr_btt_nttb   : 1; \/* D[30] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
rtl_nltr	ili9341.h	/^    unsigned  rtl_nltr          : 1; \/* D[6] *\/$/;"	m	struct:__anon4::ILI9341ParamBits_GET_MADCTL
sdram_bulk_erase	main.c	/^static void sdram_bulk_erase(void) {$/;"	f	file:
serusbcfg	usbcfg.c	/^const SerialUSBConfig serusbcfg = {$/;"	v
shell_cfg1	main.c	/^static const ShellConfig shell_cfg1 = {$/;"	v	file:
sleep	ili9341.h	/^    unsigned  sleep             : 1; \/* D[17] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
sleep	ili9341.h	/^    unsigned  sleep             : 1; \/* D[4] *\/$/;"	m	struct:__anon3::ILI9341ParamBits_GET_PWR_MODE
spi	ili9341.h	/^  SPIDriver     *spi;                   \/**< SPI driver used by ILI9341.*\/$/;"	m	struct:ILI9341Config
spi_cfg5	main.c	/^const SPIConfig spi_cfg5 = {$/;"	v
state	ili9341.h	/^  ili9341state_t        state;      \/**< Driver state.*\/$/;"	m	struct:ILI9341Driver
tearing	ili9341.h	/^    unsigned  tearing           : 1; \/* D[ 9] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
tearing	ili9341.h	/^    unsigned  tearing           : 1; \/* D[7] *\/$/;"	m	struct:__anon7::ILI9341ParamBits_GET_SIG_MODE
tearing_mode	ili9341.h	/^    unsigned  tearing_mode      : 1; \/* D[ 5] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
tearing_mode	ili9341.h	/^    unsigned  tearing_mode      : 1; \/* D[6] *\/$/;"	m	struct:__anon7::ILI9341ParamBits_GET_SIG_MODE
transpose	ili9341.h	/^    unsigned  transpose         : 1; \/* D[28] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
usb_event	usbcfg.c	/^static void usb_event(USBDriver *usbp, usbevent_t event) {$/;"	f	file:
usbcfg	usbcfg.c	/^const USBConfig usbcfg = {$/;"	v
value	ili9341.h	/^  uint8_t               value;      \/**< Non-stacked value, for SPI with CCM.*\/$/;"	m	struct:ILI9341Driver
vcom_configuration_descriptor	usbcfg.c	/^static const USBDescriptor vcom_configuration_descriptor = {$/;"	v	file:
vcom_configuration_descriptor_data	usbcfg.c	/^static const uint8_t vcom_configuration_descriptor_data[67] = {$/;"	v	file:
vcom_device_descriptor	usbcfg.c	/^static const USBDescriptor vcom_device_descriptor = {$/;"	v	file:
vcom_device_descriptor_data	usbcfg.c	/^static const uint8_t vcom_device_descriptor_data[18] = {$/;"	v	file:
vcom_string0	usbcfg.c	/^static const uint8_t vcom_string0[] = {$/;"	v	file:
vcom_string1	usbcfg.c	/^static const uint8_t vcom_string1[] = {$/;"	v	file:
vcom_string2	usbcfg.c	/^static const uint8_t vcom_string2[] = {$/;"	v	file:
vcom_string3	usbcfg.c	/^static const uint8_t vcom_string3[] = {$/;"	v	file:
vcom_strings	usbcfg.c	/^static const USBDescriptor vcom_strings[] = {$/;"	v	file:
view_buffer	main.c	/^static uint8_t view_buffer[240 * 320];$/;"	v	file:
vrefr_btt_nttb	ili9341.h	/^    unsigned  vrefr_btt_nttb    : 1; \/* D[27] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
vscroll	ili9341.h	/^    unsigned  vscroll           : 1; \/* D[15] *\/$/;"	m	struct:__anon2::ILI9341ParamBits_GET_STATUS
vsync	ili9341.h	/^    unsigned  vsync             : 1; \/* D[4] *\/$/;"	m	struct:__anon7::ILI9341ParamBits_GET_SIG_MODE
wolf3d_palette	wolf3d_palette.c	/^const ltdc_color_t wolf3d_palette[256] __attribute__((aligned(4))) = {$/;"	v
wolf3d_vgagraph_chunk87	res/wolf3d_vgagraph_chunk87.c	/^const unsigned char wolf3d_vgagraph_chunk87[64000] = {$/;"	v
wolf3d_vgagraph_chunk87_size	res/wolf3d_vgagraph_chunk87.h	6;"	d
